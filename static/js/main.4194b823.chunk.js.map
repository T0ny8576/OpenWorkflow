{"version":3,"sources":["diagram.js","utils.js","infoBox.js","toolbar.js","elementModal.js","App.js","serviceWorker.js","index.js","wca-state-machine_pb.js"],"names":["joint","shapes","basic","Circle","define","attrs","circle","stroke-width","text","font-weight","standard","Link","line","sourceMarker","type","width","stroke","smooth","Diagram","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","graph","dia","Graph","state_shape_width","state_shape_height","state_spacing_x","state_spacing_y","state_per_row","cellId2FSMElement","renderAllStates","bind","assertThisInitialized","renderAllTransitions","getStateName2CellMap","clearGraph","inherits","createClass","key","value","_this$props","onClickCell","paperWidth","$el","$","el","console","log","paper","Paper","height","gridSize","model","restrictTranslate","on","Math","floor","parseInt","options","clear","cell","stateCells","push","fsm","_this2","getStatesList","map","state","idx","x","y","label","getName","fsa","State","position","size","getStartState","attr","addGraphCellWithRef","_this3","states","stateName2Cell","getTransitionsList","transition","source","target","getNextState","CustomArrow","id","labels","getElements","jointElement","stateName","error","ref","addCell","_this4","react_default","a","createElement","Component","fsmPb","require","FSMElementType","STATE","Symbol","TRANSITION","freeze","getFSMElementType","element","getProcessorsList","isObject","o","getPropertyByString","s","replace","split","i","n","length","k","findStatePbByName","result","findTransitionOriginateState","curTransition","elementToFormValues","values","elementType","name","isStartState","to","from","instruction","audio","getInstruction","getAudio","image","getImage","video","getVideo","Error","callable","elementCallables","elementCallableItem","item","getCallableName","callableArgs","JSON","parse","getCallableArgs","args","keys","callableToFormValues","getPredicatesList","getElementCallables","formCallableToElementCallable","callbleFormValue","setFunc","callablePbType","zoo","callableArray","_loop","callableValue","callablePb","setName","setCallableName","setCallableArgs","stringify","formValuesToElement","formValue","initElement","undefined","addStates","Transition","addTransitions","newName","aux","oldName","setNextState","setStateName","setStartState","setProcessorsList","Processor","procZoo","newFromStateName","oldFromState","index","indexOf","splice","setTransitionFromState","oldFromStateName","instPb","Instruction","setAudio","setImage","setVideo","setInstruction","setPredicatesList","TransitionPredicate","predZoo","getColumnWidth","rows","accessor","headerText","cellLength","max","apply","toConsumableArray","row","concat","min","InfoBox","imageInstUrl","res","URL","revokeObjectURL","blob","Blob","createObjectURL","prepareResource","tableData","callableItem","callable_name","callable_args","tableColumns","Header","filterMethod","filter","matchSorter","filterAll","Cell","main_default","src","ListGroup_default","style","margin","ListGroupItem_default","variant","Fragment","alt","es","data","filterable","defaultFilterMethod","String","columns","defaultPageSize","makeTable","instance","ToolBar","_ref","onImport","onAdd","onExport","onEdit","onDelete","Row_default","ButtonGroup_default","Col_default","sm","lib_default","as","onChange","Button_default","className","onClick","Dropdown_default","Toggle","Menu","Item","isEmpty","errorMessage","test","BSFormikField","field","placeholder","defaultValue","isValid","objectWithoutProperties","Form_default","Group","Row","Label","column","Control","assign","required","ImageUploadField","imageBytes","form","e","fileArray","forEach","fileContent","setFieldValue","SelectFormikField","_ref2","selectOptions","react_select_esm","find","option","onBlur","CallableNameField","_ref3","elementModal_BSFormikField","CallableArgField","_ref4","addFieldError","errors","fieldName","createCallableMultiFields","callableTitle","arrayHelpers","zooOptions","getZooOptions","formik_esm","component","validate","elementModal_SelectFormikField","createCallableArgMultiFields","remove","argIndex","ElementModal","React","createRef","onHide","title","_this$props2","show","onModalCancel","onModalSave","callableZoo","callableButtonValue","initValues","getInitModalValuesFromElement","Modal_default","Title","Body","initialValues","onSubmit","_ref5","setSubmitting","render","_ref6","existingItemArray","includes","isDuplicate","isUniqueName","_ref7","checked","fsmStateOptions","elementModal_ImageUploadField","createTransitionBasicFields","eachCallable","Footer","current","submitForm","App","diagramRef","diagramContainerRef","alert","StateMachine","curFSMElement","modalInitElement","alertMsg","msg","showNewElementModal","newElementModalType","Container_default","fluid","Alert_default","dismissible","backgroundColor","diagram_Diagram","window","innerWidth","toolbar_ToolBar","infoBox","elementModal","setState","fsmData","deserializeBinary","err","loadFsm","fsmPbSerialized","serializeBinary","saveAs","isSafe","isElementSafeToDelete","elementIdx","hasCurElement","deleteStatePb","deleteTransitionPb","elementView","fsmElement","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","jspb","goog","global","Function","exportSymbol","proto","opt_data","Message","initialize","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","f","obj","getFieldWithDefault","callableName","callableKwargsMap","getCallableKwargsMap","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readString","readMessage","message","Map","readBytes","skipField","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","writeString","getLength","writeBytes","setProto3StringField","opt_noLazyCreate","getMapField","clearCallableKwargsMap","getImage_asB64","getVideo_asB64","getImage_asU8","getVideo_asU8","bytesAsB64","bytesAsU8","setProto3BytesField","repeatedFields_","predicatesList","toObjectList","nextState","addPredicates","writeRepeatedMessage","writeMessage","getRepeatedWrapperField","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearPredicatesList","getWrapperField","setWrapperField","clearInstruction","hasInstruction","getField","processorsList","transitionsList","addProcessors","clearProcessorsList","setTransitionsList","clearTransitionsList","statesList","assetsMap","getAssetsMap","startState","setStatesList","clearStatesList","clearAssetsMap","object","extend","exports"],"mappings":"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","file":"static/js/main.4194b823.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport $ from \"jquery\";\nimport joint from \"jointjs\";\n\n// define custom state machine JointJS elements\njoint.shapes.basic.Circle.define(\"fsa.State\", {\n  attrs: {\n    circle: {\n      \"stroke-width\": 2\n    },\n    text: {\n      \"font-weight\": \"800\"\n    }\n  }\n});\n\njoint.shapes.standard.Link.define(\"fsa.CustomArrow\", {\n  attrs: {\n    line: {\n      sourceMarker: {\n        type: \"circle\",\n        width: 5,\n        stroke: \"none\"\n      }\n    }\n  },\n  smooth: true\n});\n\nconst create_transition_cell = (source, target, label) => {\n  var cell = new joint.shapes.fsa.CustomArrow({\n    source: {\n      id: source.id\n    },\n    target: {\n      id: target.id\n    },\n    labels: [\n      {\n        position: 0.5,\n        attrs: {\n          text: {\n            text: label || \"\"\n          }\n        }\n      }\n    ]\n  });\n  return cell;\n};\n\nconst create_state_cell = (x, y, label) => {\n  let cell = new joint.shapes.fsa.State({\n    position: {\n      x: x,\n      y: y\n    },\n    size: {\n      width: 100,\n      height: 100\n    },\n    attrs: {\n      text: {\n        text: label\n      }\n    }\n  });\n  return cell;\n};\n\nexport class Diagram extends Component {\n  constructor(props) {\n    super(props);\n    this.graph = new joint.dia.Graph();\n    this.state_shape_width = 50;\n    this.state_shape_height = 50;\n    this.state_spacing_x = 250;\n    this.state_spacing_y = 150;\n    this.state_per_row = 3;\n    this.cellId2FSMElement = {};\n    this.renderAllStates = this.renderAllStates.bind(this);\n    this.renderAllTransitions = this.renderAllTransitions.bind(this);\n    this.getStateName2CellMap = this.getStateName2CellMap.bind(this);\n    this.clearGraph = this.clearGraph.bind(this);\n  }\n\n  componentDidMount() {\n    const { onClickCell, paperWidth } = this.props;\n    this.$el = $(this.el);\n    console.log(\"paper width is: \" + paperWidth);\n    const paper = new joint.dia.Paper({\n      el: this.$el,\n      width: paperWidth,\n      height: 5 * paperWidth,\n      gridSize: 1,\n      model: this.graph,\n      restrictTranslate: true\n    });\n    paper.on(\"cell:pointerdblclick\", onClickCell);\n    paper.on(\"cell:pointerclick\", onClickCell);\n    this.state_per_row =\n      Math.floor(\n        parseInt(paper.options.width, 10) /\n          (this.state_shape_width + this.state_spacing_x)\n      ) + 1;\n  }\n\n  componentWillUnmount() {\n    this.graph.clear();\n    this.cellId2FSMElement = {};\n  }\n\n  componentDidUpdate() {}\n\n  handleStateCallback(cell) {\n    this.stateCells.push(cell);\n  }\n\n  renderAllStates(fsm) {\n    const stateCells = fsm.getStatesList().map((state, idx) => {\n      const cell = create_state_cell(\n        Math.floor(idx % this.state_per_row) * this.state_spacing_x,\n        Math.floor(idx / this.state_per_row) * this.state_spacing_y,\n        state.getName()\n      );\n      // mark start state\n      if (fsm.getStartState() === state.getName()){\n        cell.attr('circle/stroke-width', '5');\n      }\n      this.addGraphCellWithRef(cell, state);\n      return null;\n    }, this);\n    return stateCells;\n  }\n\n  renderAllTransitions(fsm) {\n    const states = fsm.getStatesList();\n    const stateName2Cell = this.getStateName2CellMap();\n    const transitionCells = states.map(state => {\n      return state.getTransitionsList().map(transition => {\n        const cell = create_transition_cell(\n          stateName2Cell[state.getName()],\n          stateName2Cell[transition.getNextState()],\n          transition.getName()\n        );\n        this.addGraphCellWithRef(cell, transition);\n        return null;\n      }, this);\n    }, this);\n    return transitionCells;\n  }\n\n  getStateName2CellMap() {\n    const stateCells = this.graph.getElements();\n    const stateName2Cell = {};\n    stateCells.map(jointElement => {\n      const stateName = jointElement.attr(\"text/text\");\n      if (stateName in stateName2Cell) {\n        // throw new Error(\"Invalid FSM! Duplicate state name found.\");\n        console.error(\"Duplicate State Name: \" + stateName);\n      } else {\n        stateName2Cell[stateName] = jointElement;\n      }\n      return null;\n    });\n    return stateName2Cell;\n  }\n\n  addGraphCellWithRef(cell, ref) {\n    // addGraphCell add a cell to the graph and record the reference object\n    // this cell represents.\n    this.graph.addCell(cell);\n    this.cellId2FSMElement[cell.id] = ref;\n  }\n\n  clearGraph() {\n    this.graph.clear();\n    this.cellId2FSMElement = {};\n  }\n\n  render() {\n    const { fsm } = this.props;\n    if (fsm != null) {\n      this.clearGraph();\n      this.renderAllStates(fsm);\n      this.renderAllTransitions(fsm);\n    }\n    return <div ref={el => (this.el = el)} />;\n  }\n}\n","import procZoo from \"./processor-zoo.json\";\nimport predZoo from \"./predicate-zoo.json\";\nvar fsmPb = require(\"./wca-state-machine_pb\");\n\nexport const FSMElementType = {\n  STATE: Symbol(\"state\"),\n  TRANSITION: Symbol(\"transition\")\n};\nObject.freeze(FSMElementType);\n\n// only support state and transition two types for now\nexport const getFSMElementType = element => {\n  return typeof element.getProcessorsList === \"function\"\n    ? FSMElementType.STATE\n    : FSMElementType.TRANSITION;\n};\n\nfunction isObject(o) {\n  //How you acomplish this is upto you.\n  return o === Object(o);\n}\n\n// allow array access using nested not annatation\n// obj = {\n//     'a': ['property': 'test']\n// }\n// e.g. obj['a.0.property']\nexport const getPropertyByString = function (o, s) {\n  if (s) {\n    s = s.replace(/^\\./, \"\"); // strip a leading dot\n    var a = s.split(\".\");\n    for (var i = 0, n = a.length; i < n; ++i) {\n      var k = a[i];\n      if (isObject(o) && k in o) {\n        o = o[k];\n      } else {\n        return;\n      }\n    }\n    return o;\n  } else {\n    return;\n  }\n};\n\nexport const findStatePbByName = function (stateName, fsm) {\n  let result = null;\n  fsm.getStatesList().map(state => {\n    if (state.getName() === stateName) {\n      result = state;\n    }\n    return null;\n  });\n  return result;\n};\n\nexport const findTransitionOriginateState = function (transition, fsm) {\n  let result = null;\n  fsm.getStatesList().map(state => {\n    state.getTransitionsList().map(curTransition => {\n      if (curTransition === transition) {\n        result = state;\n      }\n      return null;\n    });\n    return null;\n  });\n  return result;\n};\n\nconst callableToFormValues = function (elementCallables) {\n  let result = [];\n  elementCallables.map(elementCallableItem => {\n    let item = {};\n    item.name = elementCallableItem.getName();\n    item.type = elementCallableItem.getCallableName();\n    let callableArgs = JSON.parse(elementCallableItem.getCallableArgs());\n    item.args = {};\n    Object.keys(callableArgs).map(key => {\n      item.args[key] = callableArgs[key];\n      return null;\n    });\n    result.push(item);\n    return null;\n  });\n  return result;\n};\n\nconst getElementCallables = function (element) {\n  const elementType = getFSMElementType(element);\n  let elementCallables = null;\n  switch (elementType) {\n    case FSMElementType.STATE:\n      elementCallables = element.getProcessorsList();\n      break;\n    case FSMElementType.TRANSITION:\n      elementCallables = element.getPredicatesList();\n      break;\n    default:\n      throw new Error(\n        \"Unsupported Element Type: \" +\n        elementType +\n        \". Failed to add a new element\"\n      );\n  }\n  return elementCallables;\n};\n\nexport const elementToFormValues = function (element, fsm) {\n  const values = {};\n  values.callable = [];\n  const elementType = getFSMElementType(element);\n  // name\n  const name = element.getName();\n  values.name = name;\n  // type specific attrs\n  switch (elementType) {\n    case FSMElementType.STATE:\n      values.isStartState = (element.getName() === fsm.getStartState());\n      break;\n    case FSMElementType.TRANSITION:\n      values.to = element.getNextState();\n      values.from = findTransitionOriginateState(element, fsm).getName();\n      values.instruction = {};\n      values.instruction.audio = element.getInstruction().getAudio();\n      values.instruction.image = element.getInstruction().getImage();\n      values.instruction.video = element.getInstruction().getVideo();\n      break;\n    default:\n      throw new Error(\n        \"Unsupported Element Type: \" + elementType + \". Failed to add a new element\"\n      );\n      break;\n  }\n  // handle callables\n  values.callable = callableToFormValues(getElementCallables(element));\n  // add predicates\n  return values;\n};\n\nconst formCallableToElementCallable = function (\n  callbleFormValue,\n  setFunc,\n  callablePbType,\n  zoo\n) {\n  let callableArray = [];\n  for (let idx = 0; idx < callbleFormValue.length; idx++) {\n    let callableValue = callbleFormValue[idx];\n    let callablePb = new callablePbType();\n    callablePb.setName(callableValue.name);\n    callablePb.setCallableName(callableValue.type);\n    // callable args\n    // need to filter out relevant arguments only\n    // since the form may contain irrelevant arguments for other callable type\n    // this is caused by user switching callable types\n    let args = {};\n    Object.keys(zoo[callableValue.type]).map(key => {\n      args[key] = callableValue.args[key];\n      return null;\n    });\n    callablePb.setCallableArgs(JSON.stringify(args));\n    callableArray.push(callablePb);\n  }\n  setFunc(callableArray);\n};\n\n/**\n * Change the name of a state\n * @param {*} element\n * @param {*} newName\n * @param {*} fsm\n */\nconst setStateName = function (element, newName, aux) {\n  const { fsm } = aux;\n  let oldName = element.getName();\n  if (oldName) {\n    // need to fix affected transitions nextState when a state name\n    // changes\n    fsm.getStatesList().map(state => {\n      state.getTransitionsList().map(curTransition => {\n        if (curTransition.getNextState() === oldName) {\n          curTransition.setNextState(newName);\n        }\n        return null;\n      });\n      return null;\n    });\n  }\n  element.setName(newName);\n};\n\nconst setTransitionFromState = function (element, newFromStateName, aux) {\n  const { fsm } = aux;\n  let oldFromState = findTransitionOriginateState(element, fsm);\n  if (newFromStateName !== oldFromState.getName()) {\n    // remove the transition from the old state\n    let index = oldFromState.getTransitionsList().indexOf(element);\n    if (index > -1) {\n      oldFromState.getTransitionsList().splice(index, 1);\n    }\n    // add the transition to the new state\n    const fromStatePb = findStatePbByName(newFromStateName, fsm);\n    fromStatePb.addTransitions(element);\n  }\n};\n\n/**\n * Set element from formValue.\n * @param {} formValue\n * @param {*} element: the FSM element to be set.\n */\nexport const formValuesToElement = function (formValue, fsm, type, initElement) {\n  // create or use appropriate element based on type\n  let element = null;\n  if (initElement === null || initElement === undefined) {\n    switch (type) {\n      case FSMElementType.STATE:\n        element = new fsmPb.State();\n        fsm.addStates(element);\n        break;\n      case FSMElementType.TRANSITION:\n        element = new fsmPb.Transition();\n        // find from state\n        const fromStatePb = findStatePbByName(formValue.from, fsm);\n        fromStatePb.addTransitions(element);\n        break;\n      default:\n        throw new Error(\n          \"Unsupported Element Type: \" + type + \". Failed to add a new element\"\n        );\n    }\n  } else {\n    element = initElement;\n  }\n\n  // deal with type specific fields\n  switch (type) {\n    case FSMElementType.STATE:\n      setStateName(element, formValue[\"name\"], { fsm: fsm });\n      // set start state\n      if (formValue[\"isStartState\"]) {\n        fsm.setStartState(formValue[\"name\"]);\n      }\n      // add processors\n      formCallableToElementCallable(\n        formValue.callable,\n        element.setProcessorsList.bind(element), //bind is needed to pass context\n        fsmPb.Processor,\n        procZoo\n      );\n      break;\n    case FSMElementType.TRANSITION:\n      element.setName(formValue.name);\n      // from state\n      setTransitionFromState(element, formValue.from, {\n        fsm: fsm,\n        oldFromStateName: formValue.from\n      });\n      // to state\n      element.setNextState(formValue.to);\n      // instruction\n      let instPb = new fsmPb.Instruction();\n      instPb.setAudio(formValue.instruction.audio);\n      instPb.setImage(formValue.instruction.image);\n      instPb.setVideo(formValue.instruction.video);\n      element.setInstruction(instPb);\n      // add predicates\n      formCallableToElementCallable(\n        formValue.callable,\n        element.setPredicatesList.bind(element),\n        fsmPb.TransitionPredicate,\n        predZoo\n      );\n      break;\n    default:\n      throw new Error(\n        \"Unsupported Element Type: \" + type + \". Failed to add a new element\"\n      );\n  }\n};\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport matchSorter from \"match-sorter\";\nimport ListGroup from \"react-bootstrap/lib/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/lib/ListGroupItem\";\nimport { FSMElementType, getFSMElementType } from \"./utils.js\";\nimport \"react-table/react-table.css\";\nimport ReactJson from \"react-json-view\";\n\nconst getColumnWidth = (rows, accessor, headerText) => {\n  const maxWidth = 400;\n  const magicSpacing = 11;\n  const cellLength = Math.max(\n    ...rows.map(row => (`${row[accessor]}` || \"\").length),\n    headerText.length\n  );\n  return Math.min(maxWidth, cellLength * magicSpacing);\n};\n\nclass InfoBox extends Component {\n  constructor(props) {\n    super(props);\n    this.imageInstUrl = null;\n  }\n\n  prepareResource(element) {\n    let res = {};\n    // clear up urls to prevent leaking memories\n    if (this.imageInstUrl !== null) {\n      URL.revokeObjectURL(this.imageInstUrl);\n    }\n    if (element.getInstruction()) {\n      let blob = new Blob([element.getInstruction().getImage()], {\n        type: \"image\"\n      });\n      this.imageInstUrl = URL.createObjectURL(blob);\n      res.imageInstUrl = this.imageInstUrl;\n    }\n    return res;\n  }\n\n  render() {\n    const { element } = this.props;\n    const elementType = getFSMElementType(element);\n\n    // prepare resources\n    let res = {};\n    if (elementType === FSMElementType.TRANSITION) {\n      res = this.prepareResource(element);\n    }\n\n    const tableData =\n      elementType === FSMElementType.STATE\n        ? element.getProcessorsList().map(callableItem => {\n            return {\n              name: callableItem.getName(),\n              callable_name: callableItem.getCallableName(),\n              callable_args: JSON.parse(callableItem.getCallableArgs())\n            };\n          })\n        : element.getPredicatesList().map(callableItem => {\n            return {\n              name: callableItem.getName(),\n              callable_name: callableItem.getCallableName(),\n              callable_args: JSON.parse(callableItem.getCallableArgs())\n            };\n          });\n    const tableColumns = [\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n        filterMethod: (filter, rows) =>\n          matchSorter(rows, filter.value, { keys: [\"name\"] }),\n        filterAll: true,\n        width: getColumnWidth(tableData, \"name\", \"Name\")\n      },\n      {\n        Header: \"Type\",\n        accessor: \"callable_name\",\n        filterMethod: (filter, rows) =>\n          matchSorter(rows, filter.value, {\n            keys: [\"callable_name\"]\n          }),\n        filterAll: true,\n        width: getColumnWidth(tableData, \"callable_name\", \"Type\")\n      },\n      {\n        Header: \"Arguments\",\n        accessor: \"callable_args\",\n        filterMethod: (filter, rows) =>\n          matchSorter(rows, filter.value, {\n            keys: [\"callable_args\"]\n          }),\n        Cell: row => <ReactJson src={row.value} />,\n        filterAll: true\n      }\n    ];\n    return (\n      <ListGroup style={{ width: \"100%\", margin: \"20px\" }}>\n        <ListGroupItem variant=\"secondary\">\n          Name: {element.getName()}\n        </ListGroupItem>\n        <ListGroupItem variant=\"secondary\">\n          Type: {elementType === FSMElementType.STATE ? \"State\" : \"Transition\"}\n        </ListGroupItem>\n        {elementType === FSMElementType.TRANSITION && (\n          <>\n            <ListGroupItem variant=\"secondary\">Instruction</ListGroupItem>\n            <ListGroupItem>\n              Audio: {element.getInstruction().getAudio()}\n            </ListGroupItem>\n            {res.imageInstUrl ? (\n              <ListGroupItem>\n                Image: <img src={res.imageInstUrl} alt=\"instruction\" />\n              </ListGroupItem>\n            ) : (\n              <ListGroupItem>Image: undefined</ListGroupItem>\n            )}\n            <ListGroupItem>\n              Video: {element.getInstruction().getVideo()}\n            </ListGroupItem>\n          </>\n        )}\n        <ListGroupItem variant=\"secondary\">\n          {elementType === FSMElementType.STATE\n            ? \"Processors\"\n            : \"Transition Predicates\"}\n        </ListGroupItem>\n        <ReactTable\n          data={tableData}\n          filterable\n          defaultFilterMethod={(filter, row) =>\n            String(row[filter.id]) === filter.value\n          }\n          columns={tableColumns}\n          defaultPageSize={3}\n        >\n          {(state, makeTable, instance) => {\n            return <div>{makeTable()}</div>;\n          }}\n        </ReactTable>\n      </ListGroup>\n    );\n  }\n}\n\nexport default InfoBox;\n","import React from \"react\";\nimport Button from \"react-bootstrap/lib/Button\";\nimport ButtonGroup from \"react-bootstrap/lib/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/lib/Dropdown\";\nimport Row from \"react-bootstrap/lib/Row\";\nimport Col from \"react-bootstrap/lib/Col\";\nimport FileReaderInput from \"react-file-reader-input\";\nimport { FSMElementType } from \"./utils.js\";\nimport \"./App.css\";\n\nexport const ToolBar = ({\n  onImport,\n  onAdd,\n  onExport,\n  onEdit,\n  onDelete\n}) => {\n  return (\n    <>\n      <Row>\n        <ButtonGroup>\n          <Col sm={3}>\n            <FileReaderInput as=\"buffer\" onChange={onImport}>\n              <Button variant=\"primary\" className=\"fw-btn\">Import</Button>\n            </FileReaderInput>\n          </Col>\n          <Col sm={3}>\n            <Button variant=\"primary\" onClick={onExport} className=\"fw-btn\">\n              Export\n          </Button>\n          </Col>\n          <Col sm={3}>\n            <Dropdown>\n              <Dropdown.Toggle id=\"dropdown-add\" className=\"fw-btn\">Add</Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={() => onAdd(FSMElementType.STATE)}>State</Dropdown.Item>\n                <Dropdown.Item onClick={() => onAdd(FSMElementType.TRANSITION)}>Transition</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n          <Col sm={3}>\n            <Button variant=\"primary\" onClick={onEdit} className=\"fw-btn\">\n              Edit\n          </Button>\n          </Col>\n          <Col sm={3}>\n            <Button variant=\"primary\" onClick={onDelete} className=\"fw-btn\">\n              Delete\n          </Button>\n          </Col>\n        </ButtonGroup>\n      </Row>\n    </>\n  );\n};\n","import React, { Component } from \"react\";\nimport Modal from \"react-bootstrap/lib/Modal\";\nimport Button from \"react-bootstrap/lib/Button\";\nimport Form from \"react-bootstrap/lib/Form\";\nimport Col from \"react-bootstrap/lib/Col\";\nimport Row from \"react-bootstrap/lib/Row\";\nimport { Formik, Form as FormikForm, Field, FieldArray } from \"formik\";\nimport FileReaderInput from \"react-file-reader-input\";\nimport \"./App.css\";\nimport Select from \"react-select\";\nimport procZoo from \"./processor-zoo.json\";\nimport predZoo from \"./predicate-zoo.json\";\nimport {\n  FSMElementType,\n  getPropertyByString,\n  elementToFormValues\n} from \"./utils.js\";\n\nvar DEBUG = true;\n\n/** Helper function to create options for Select elements\n * from a pre-defined callable zoo (procZoo or predZoo)\n *\n * @param {*} zoo\n */\nconst getZooOptions = zoo => {\n  return Object.keys(zoo).map(key => {\n    return { value: key, label: key };\n  });\n};\n\n/** Custom validate functions for Formik forms\n *\n * Formik has a wierd return requirement\n * if invalid, return a string containing the error message or return undefined.\n *\n * return null if valid, a string if invalid\n * @param {*} param0\n */\nconst isEmpty = value => {\n  let errorMessage = null;\n  if (value === undefined || value === null || !/^.+$/i.test(value)) {\n    errorMessage = \"Required. Cannot be empty.\";\n  }\n  return errorMessage;\n};\n\n/**\n * return null if valid, a string if invalid\n * @param {*} value\n * @param {*} existingItemArray\n */\nconst isDuplicate = (value, existingItemArray) => {\n  let errorMessage = null;\n  if (\n    value === undefined ||\n    value === null ||\n    existingItemArray.includes(value)\n  ) {\n    errorMessage = \"Duplicate name. Names must be unique.\";\n  }\n  return errorMessage;\n};\n\n/**\n * return null if valid, a string if invalid\n */\nconst isUniqueName = (value, existingItemArray) => {\n  return isEmpty(value) || isDuplicate(value, existingItemArray) || null;\n};\n\n/*\nCustomize the look of form fields using bootstrap.\nThese following React components should be passed as the \"component\"\nproperty of a Formik field.\n*/\nconst BSFormikField = ({\n  field, // { name, value, onChange, onBlur }\n  type,\n  label,\n  placeholder,\n  defaultValue,\n  isValid,\n  ...props\n}) => (\n    <Form.Group as={Row}>\n      <Form.Label column>{label}</Form.Label>\n      <Col>\n        <Form.Control\n          required\n          {...field}\n          {...props}\n          type={type}\n          placeholder={placeholder}\n          value={field.value || defaultValue || \"\"} // to supress uncontrolled to controlled warning\n          isValid={isValid}\n        />\n      </Col>\n    </Form.Group>\n  );\n\nclass ImageUploadField extends Component {\n  constructor(props) {\n    super(props);\n    this.imageInstUrl = null;\n  }\n\n  prepareResource(imageBytes) {\n    // clear up urls to prevent leaking memories\n    if (this.imageInstUrl !== null) {\n      URL.revokeObjectURL(this.imageInstUrl);\n    }\n    let blob = new Blob([imageBytes], {\n      type: \"image\"\n    });\n    this.imageInstUrl = URL.createObjectURL(blob);\n    return {\n      imageInstUrl: this.imageInstUrl\n    };\n  }\n\n  render() {\n    const { field, form, label, } = this.props;\n    let res = {};\n    if (field.value) {\n      res = this.prepareResource(field.value);\n    }\n    return (\n      <Form.Group as={Row}>\n        <Form.Label column>{label}</Form.Label>\n        {res.imageInstUrl && (\n          <Form.Label column sm={1}>\n            <img\n              src={res.imageInstUrl}\n              alt=\"instruction\"\n              style={{ width: 40, height: 40 }}\n            />\n          </Form.Label>\n        )}\n        <Col>\n          <FileReaderInput\n            as=\"buffer\"\n            onChange={(e, fileArray) => {\n              fileArray.forEach(result => {\n                const e = result[0];\n                let fileContent = e.target.result;\n                form.setFieldValue(field.name, fileContent);\n              });\n            }}\n          >\n            <Button variant=\"light\" className=\"fw-btn\">\n              New Image\n            </Button>\n          </FileReaderInput>\n        </Col>\n      </Form.Group>\n    );\n  }\n}\n\n/** Custom the look of a Formik Select field with react-select\n *\n * @param {*} param0\n */\nconst SelectFormikField = ({\n  field,\n  form, // values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  label,\n  selectOptions,\n  ...props\n}) => (\n    <Form.Group as={Row}>\n      <Form.Label column>{label}</Form.Label>\n      <Col>\n        <Select\n          {...field}\n          {...props}\n          options={selectOptions}\n          name={field.name}\n          value={\n            selectOptions\n              ? selectOptions.find(option => option.value === field.value)\n              : \"\"\n          }\n          onChange={option => form.setFieldValue(field.name, option.value)}\n          onBlur={field.onBlur}\n        />\n      </Col>\n    </Form.Group>\n  );\n\nconst CallableNameField = ({\n  field, // name, value, onChange, onBlur\n  ...props\n}) => (\n    <BSFormikField\n      field={field}\n      type=\"text\"\n      label=\"name\"\n      placeholder=\"Enter Name\"\n      {...props}\n    />\n  );\n\nconst CallableArgField = ({\n  field,\n  key, // unused. not passed to the field. just to suppress parent's react list warning\n  label,\n  placeholder,\n  ...props\n}) => (\n    <BSFormikField\n      field={field}\n      type=\"text\"\n      label={label}\n      placeholder={placeholder}\n      {...props}\n    />\n  );\n\nconst addFieldError = (errors, fieldName) => {\n  if (getPropertyByString(errors, fieldName)) {\n    return (\n      <div className=\"text-danger\">\n        {getPropertyByString(errors, fieldName)}\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\n/*\nFunctions to create a group of form field to present a \"callable\".\nThe UIs to create a \"callable\" consist of following form fields:\n1. callable name\n2. callable type\n3. A field for each callable argument (loaded from callable zoos)\n*/\nconst createCallableMultiFields = (\n  callableTitle,\n  zoo,\n  values,\n  index,\n  arrayHelpers,\n  errors\n) => {\n  const zooOptions = getZooOptions(zoo);\n  return (\n    <div key={index} className=\"border\">\n      <h6>{callableTitle}</h6>\n      <Field\n        name={`callable.${index}.name`} // add values.callable[index].name\n        component={CallableNameField}\n        validate={isEmpty}\n      />\n      {addFieldError(errors, `callable.${index}.name`)}\n      <Field\n        name={`callable.${index}.type`} // add values.callable[index].name\n        component={props => (\n          <SelectFormikField\n            {...props}\n            label=\"Type\"\n            selectOptions={zooOptions}\n          />\n        )}\n        validate={isEmpty}\n      />\n      {addFieldError(errors, `callable.${index}.type`)}\n      {getPropertyByString(values, `callable.${index}.type`) &&\n        createCallableArgMultiFields(\n          zoo[values[\"callable\"][index][\"type\"]],\n          index,\n          errors\n        )}\n      {DEBUG && <p>{JSON.stringify(values)}</p>}\n      <Form.Row>\n        <Button\n          variant=\"danger\"\n          className=\"btn-block\"\n          onClick={() => arrayHelpers.remove({ index })}\n        >\n          Delete\n        </Button>\n      </Form.Row>\n    </div>\n  );\n};\n\n/*\nCreate a field for each callable argument.\n*/\nconst createCallableArgMultiFields = (args, index, errors) => {\n  const argFields = Object.keys(args).map((key, argIndex) => {\n    return (\n      <div key={index + \".arg.\" + argIndex}>\n        <Field\n          name={`callable.${index}.args.${key}`} // add values.callable[0].name\n          component={CallableArgField}\n          label={key}\n          placeholder={args[key]}\n          validate={isEmpty}\n        />\n        {addFieldError(errors, `callable.${index}.args.${key}`)}\n      </div>\n    );\n  });\n  return argFields;\n};\n\n/** Create transition basic fields including\n * from and to state, and instructions.\n *\n * @param {*} values\n */\nconst createTransitionBasicFields = (fsm, form, errors) => {\n  const fsmStateOptions = fsm.getStatesList().map(state => {\n    return { value: state.getName(), label: state.getName() };\n  });\n  return (\n    <>\n      <Field\n        name=\"from\"\n        component={props => (\n          <SelectFormikField\n            {...props}\n            label=\"From State\"\n            selectOptions={fsmStateOptions}\n          />\n        )}\n        validate={isEmpty}\n      />\n      {addFieldError(errors, \"from\")}\n      <Field\n        name=\"to\"\n        component={props => (\n          <SelectFormikField\n            {...props}\n            label=\"To State\"\n            selectOptions={fsmStateOptions}\n          />\n        )}\n        validate={isEmpty}\n      />\n      {addFieldError(errors, \"to\")}\n      <Field\n        name=\"instruction.audio\"\n        component={props => (\n          <BSFormikField {...props} type=\"text\" label=\"Audio Instruction\" />\n        )}\n      />\n      <Field\n        name=\"instruction.image\"\n        component={props => (\n          <ImageUploadField label=\"Image Instruction\" {...props} />\n        )}\n      />\n      <Field\n        name=\"instruction.video\"\n        component={props => (\n          <BSFormikField {...props} type=\"text\" label=\"Video Instruction\" />\n        )}\n      />\n    </>\n  );\n};\n\n/**\n * A Modal used to create a new FSM element.\n * The core of the modal is a Formik form that captures\n * the user-inputted properties for the element\n */\nclass ElementModal extends Component {\n  constructor(props) {\n    super(props);\n    this.form = React.createRef();\n    this.onHide = this.onHide.bind(this);\n  }\n\n  onHide() {\n    // do nothing\n  }\n\n  getInitModalValuesFromElement(element, fsm) {\n    if (element === null) {\n      return {\n        callable: []\n      };\n    } else {\n      return elementToFormValues(element, fsm);\n    }\n  }\n\n  render() {\n    const {\n      show,\n      type,\n      fsm,\n      onModalCancel,\n      onModalSave,\n      initElement\n    } = this.props;\n\n    let title,\n      callableTitle = \"\";\n    let callableZoo = null;\n    let callableButtonValue = \"\";\n    switch (type) {\n      case FSMElementType.STATE:\n        title = \"State\";\n        callableTitle = \"New Processor\";\n        callableButtonValue = \"Add Processor\";\n        callableZoo = procZoo;\n        break;\n      case FSMElementType.TRANSITION:\n        title = \"Transition\";\n        callableTitle = \"New Predicate\";\n        callableButtonValue = \"Add Predicate\";\n        callableZoo = predZoo;\n        break;\n      default:\n        throw new Error(\n          \"Unsupported Element Type: \" + type + \". Failed to add a new element\"\n        );\n    }\n\n    const initValues = this.getInitModalValuesFromElement(initElement, fsm);\n\n    return (\n      <Modal show={show} onHide={this.onHide}>\n        <Modal.Header>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Formik\n            ref={this.form}\n            initialValues={initValues}\n            onSubmit={(values, { props, setSubmitting }) => {\n              onModalSave(type, values, initElement);\n              setSubmitting(false);\n            }}\n            render={({ form, values, errors }) => (\n              <FormikForm>\n                <FieldArray\n                  name=\"callable\"\n                  render={arrayHelpers => {\n                    return (\n                      <>\n                        {type === FSMElementType.STATE && (\n                          <>\n                            <Field\n                              name=\"name\"\n                              component={BSFormikField}\n                              type=\"text\"\n                              label=\"Name\"\n                              validate={value => {\n                                if (\n                                  initElement === null ||\n                                  initElement === undefined\n                                ) {\n                                  const existingItemArray = fsm\n                                    .getStatesList()\n                                    .map(state => state.getName());\n                                  return isUniqueName(value, existingItemArray);\n                                } else {\n                                  return isEmpty(value);\n                                }\n                              }}\n                            />\n                            {addFieldError(errors, \"name\")}\n                            <Field name=\"isStartState\">\n                              {({ field, form }) => {\n                                return (\n                                  <Form.Group as={Row}>\n                                    <Form.Label column>Start from this state?</Form.Label>\n                                    <Col>\n                                      <Form.Control\n                                        type=\"checkbox\"\n                                        checked={values[field.name]}\n                                        onChange={\n                                          () => {\n                                            if (values[field.name]) {\n                                              form.setFieldValue(field.name, false);\n                                            } else {\n                                              form.setFieldValue(field.name, true);\n                                            }\n                                          }\n                                        }\n                                      />\n                                    </Col>\n                                  </Form.Group>\n                                )\n                              }}\n                            </Field>\n                            {/* <Field\n                              name=\"isStartState\"\n                              component=\"input\"\n                              type=\"checkbox\"\n                              label=\"Start State?\"\n                              checked={values.isStartState}\n                              onChange={() => {\n                                if (field.value.includes(props.value)) {\n                                  const nextValue = field.value.filter(\n                                    value => value !== props.value\n                                  );\n                                  form.setFieldValue(props.name, nextValue);\n                                } else {\n                                  const nextValue = field.value.concat(props.value);\n                                  form.setFieldValue(props.name, nextValue);\n                                }\n                              }}\n                            /> */}\n                          </>\n                        )}\n                        {type === FSMElementType.TRANSITION && (\n                          <>\n                            <Field\n                              name=\"name\"\n                              component={BSFormikField}\n                              type=\"text\"\n                              label=\"Name\"\n                              validate={isEmpty}\n                            />\n                            {addFieldError(errors, \"name\")}\n                            {createTransitionBasicFields(fsm, form, errors)}\n                          </>\n                        )}\n                        {values.callable.map((eachCallable, index) =>\n                          createCallableMultiFields(\n                            callableTitle,\n                            callableZoo,\n                            values,\n                            index,\n                            arrayHelpers,\n                            errors\n                          )\n                        )}\n                        <Form.Row>\n                          <Button\n                            variant=\"info\"\n                            className=\"btn-block\"\n                            onClick={() => arrayHelpers.push({})}\n                          >\n                            {callableButtonValue}\n                          </Button>\n                        </Form.Row>\n                      </>\n                    );\n                  }}\n                />\n              </FormikForm>\n            )}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onModalCancel}>\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={e => {\n              this.form.current.submitForm();\n            }}\n          >\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default ElementModal;\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/lib/Container\";\nimport Row from \"react-bootstrap/lib/Row\";\nimport Col from \"react-bootstrap/lib/Col\";\nimport Alert from \"react-bootstrap/lib/Alert\";\nimport { Diagram } from \"./diagram.js\";\nimport \"./App.css\";\nimport InfoBox from \"./infoBox.js\";\nimport { ToolBar } from \"./toolbar.js\";\nimport {\n  FSMElementType,\n  getFSMElementType,\n  formValuesToElement\n} from \"./utils.js\";\nimport ElementModal from \"./elementModal.js\";\nimport saveAs from \"file-saver\";\nvar fsmPb = require(\"./wca-state-machine_pb\");\n\nfunction loadFsm(fsmData) {\n  let fsm = null;\n  try {\n    fsm = new fsmPb.StateMachine.deserializeBinary(fsmData);\n  } catch (err) {\n    throw err;\n  }\n  return fsm;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.diagramRef = React.createRef();\n    this.diagramContainerRef = React.createRef();\n    this.alert = this.alert.bind(this);\n    this.onImport = this.onImport.bind(this);\n    this.onExport = this.onExport.bind(this);\n    this.onAdd = this.onAdd.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onClickCell = this.onClickCell.bind(this);\n    this.onModalCancel = this.onModalCancel.bind(this);\n    this.onModalSave = this.onModalSave.bind(this);\n    this.state = {\n      fsm: new fsmPb.StateMachine(),\n      curFSMElement: null,\n      modalInitElement: null,\n      alertMsg: {\n        show: true,\n        type: \"info\",\n        msg: \"Welcome to State Machine Editor!\"\n      },\n      showNewElementModal: false,\n      newElementModalType: null\n    };\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <h1>State Machine Visualizer with React</h1>\n        {this.state.alertMsg.msg !== \"\" && (\n          <Alert dismissible variant={this.state.alertMsg.type}>\n            {this.state.alertMsg.msg}\n          </Alert>\n        )}\n        <Row>\n          <Col sm={6} ref={this.diagramContainerRef} style={{ backgroundColor: \"lavender\" }}>\n            <h4>Diagram</h4>\n            <Diagram\n              fsm={this.state.fsm}\n              onClickCell={this.onClickCell}\n              ref={this.diagramRef}\n              paperWidth={window.innerWidth/2} // half of current window's inner width\n            />\n          </Col>\n          <Col sm={6}>\n            <ToolBar\n              onImport={this.onImport}\n              onAdd={this.onAdd}\n              onExport={this.onExport}\n              onDelete={this.onDelete}\n              onEdit={this.onEdit}\n            />\n            {this.state.curFSMElement && (\n              <Row>\n                <InfoBox\n                  element={this.state.curFSMElement}\n                  style={{ width: \"100%\" }}\n                />\n              </Row>\n            )}\n          </Col>\n        </Row>\n        <footer>\n          <Container>\n            <span className=\"text-muted\">\n              Copyright Carnegie Mellon University\n            </span>\n          </Container>\n        </footer>\n        {this.state.showNewElementModal && (\n          <ElementModal\n            fsm={this.state.fsm} // new elements may depend on existing elements (e.g. adding a transition between two states)\n            show={this.state.showNewElementModal}\n            type={this.state.newElementModalType}\n            initElement={this.state.modalInitElement} // if element is not null, then edit the element\n            onModalSave={this.onModalSave}\n            onModalCancel={this.onModalCancel}\n          />\n        )}\n      </Container>\n    );\n  }\n\n  alert(type, msg) {\n    this.setState({\n      alertMsg: {\n        type: type,\n        msg: msg\n      }\n    });\n  }\n\n  // toolbar callbacks\n  onImport(e, fileArray) {\n    fileArray.forEach(result => {\n      const e = result[0];\n      let fileContent = e.target.result;\n      let fsm = null;\n      try {\n        fsm = loadFsm(fileContent);\n        this.setState({ fsm: fsm, curFSMElement: null });\n        this.alert(\"info\", \"Success! State machine imported.\");\n      } catch (err) {\n        this.alert(\n          \"danger\",\n          \"Incorrect File Format. Failed to import the file. \\n\" + err\n        );\n      }\n    });\n  }\n\n  onExport() {\n    const fsmPb = this.state.fsm;\n    if (fsmPb.getStatesList().length === 0) {\n      this.alert(\"danger\", \"Empty state machine! There is nothing to save. \\n\");\n    } else {\n      // TODO(junjuew): fix start state. It should be marked by users\n      // instead of being the first state added\n      if (fsmPb.getStartState() === \"\") {\n        fsmPb.setStartState(fsmPb.getStatesList()[0].getName());\n      }\n      let fsmPbSerialized = fsmPb.serializeBinary();\n      let blob = new Blob([fsmPbSerialized], {\n        type: \"application/octet-stream\"\n      });\n      saveAs(blob, \"app.pbfsm\");\n    }\n  }\n\n  onAdd(type) {\n    this.setState({ showNewElementModal: true, newElementModalType: type });\n  }\n\n  isElementSafeToDelete(element) {\n    const fsm = this.state.fsm;\n    const elementType = getFSMElementType(element);\n    let isSafe = true;\n    switch (elementType) {\n      case FSMElementType.STATE:\n        // check if there are transitions starting from this state\n        if (element.getTransitionsList().length > 0) isSafe = false;\n        // check if there are transitions ending at this state\n        fsm.getStatesList().map(state => {\n          state.getTransitionsList().map(transition => {\n            if (transition.getNextState() === element.getName()) {\n              isSafe = false;\n            }\n            return null;\n          });\n          return null;\n        });\n        return isSafe;\n      case FSMElementType.TRANSITION:\n        return isSafe;\n      default:\n        throw new Error(\"Unsupported Element Type: \" + elementType);\n    }\n  }\n\n  deleteStatePb(element) {\n    const fsm = this.state.fsm;\n    if (this.isElementSafeToDelete(element)) {\n      const elementIdx = fsm.getStatesList().indexOf(element);\n      fsm.getStatesList().splice(elementIdx, elementIdx + 1);\n      this.setState({ fsm: fsm, curFSMElement: null });\n    } else {\n      return this.alert(\n        \"danger\",\n        \"A state cannot be deleted unless all transitions to/from it have been deleted.\"\n      );\n    }\n  }\n\n  deleteTransitionPb(element) {\n    const fsm = this.state.fsm;\n    if (this.isElementSafeToDelete(element)) {\n      // find the state this transition belons to and removes it from\n      // the transitions list\n      fsm.getStatesList().map(state => {\n        const elementIdx = state.getTransitionsList().indexOf(element);\n        if (elementIdx >= 0) {\n          state.getTransitionsList().splice(elementIdx, elementIdx + 1);\n        }\n        return null;\n      });\n      this.setState({ fsm: fsm, curFSMElement: null });\n    } else {\n      return this.alert(\"danger\", \"The transition cannot be safely deleted\");\n    }\n  }\n\n  hasCurElement() {\n    const element = this.state.curFSMElement;\n    if (element === null) {\n      this.alert(\n        \"danger\",\n        \"There is no element selected. Double-click to select an element.\"\n      );\n      return false;\n    }\n    return true;\n  }\n\n  onEdit() {\n    if (this.hasCurElement()) {\n      const element = this.state.curFSMElement;\n      const elementType = getFSMElementType(element);\n      this.setState({\n        showNewElementModal: true,\n        newElementModalType: elementType,\n        modalInitElement: element\n      });\n    }\n  }\n\n  onDelete() {\n    if (this.hasCurElement()) {\n      const element = this.state.curFSMElement;\n      const elementType = getFSMElementType(element);\n      switch (elementType) {\n        case FSMElementType.STATE:\n          this.deleteStatePb(element);\n          break;\n        case FSMElementType.TRANSITION:\n          this.deleteTransitionPb(element);\n          break;\n        default:\n          throw new Error(\"Unsupported Element Type: \" + elementType);\n      }\n    }\n  }\n\n  // diagram callbacks\n  onClickCell(elementView) {\n    const fsmElement = this.diagramRef.current.cellId2FSMElement[\n      elementView.model.id\n    ];\n    this.setState({\n      curFSMElement: fsmElement\n    });\n  }\n\n  onModalSave(type, formValue, initElement) {\n    const fsm = this.state.fsm;\n    formValuesToElement(formValue, fsm, type, initElement);\n    this.setState({ fsm: fsm });\n    this.setState({ showNewElementModal: false, modalInitElement: null });\n  }\n\n  onModalCancel() {\n    this.setState({ showNewElementModal: false, modalInitElement: null });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable */\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.Instruction', null, global);\ngoog.exportSymbol('proto.Processor', null, global);\ngoog.exportSymbol('proto.State', null, global);\ngoog.exportSymbol('proto.StateMachine', null, global);\ngoog.exportSymbol('proto.Transition', null, global);\ngoog.exportSymbol('proto.TransitionPredicate', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.TransitionPredicate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.TransitionPredicate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.TransitionPredicate.displayName = 'proto.TransitionPredicate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.TransitionPredicate.prototype.toObject = function(opt_includeInstance) {\n  return proto.TransitionPredicate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.TransitionPredicate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TransitionPredicate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    callableName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    callableKwargsMap: (f = msg.getCallableKwargsMap()) ? f.toObject(includeInstance, undefined) : [],\n    callableArgs: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TransitionPredicate}\n */\nproto.TransitionPredicate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TransitionPredicate;\n  return proto.TransitionPredicate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TransitionPredicate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TransitionPredicate}\n */\nproto.TransitionPredicate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCallableName(value);\n      break;\n    case 3:\n      var value = msg.getCallableKwargsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, \"\");\n         });\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCallableArgs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.TransitionPredicate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.TransitionPredicate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TransitionPredicate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TransitionPredicate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCallableName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCallableKwargsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getCallableArgs();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.TransitionPredicate.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.TransitionPredicate.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string callable_name = 2;\n * @return {string}\n */\nproto.TransitionPredicate.prototype.getCallableName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.TransitionPredicate.prototype.setCallableName = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * map<string, bytes> callable_kwargs = 3;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!(string|Uint8Array)>}\n */\nproto.TransitionPredicate.prototype.getCallableKwargsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 3, opt_noLazyCreate,\n      null));\n};\n\n\nproto.TransitionPredicate.prototype.clearCallableKwargsMap = function() {\n  this.getCallableKwargsMap().clear();\n};\n\n\n/**\n * optional string callable_args = 4;\n * @return {string}\n */\nproto.TransitionPredicate.prototype.getCallableArgs = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.TransitionPredicate.prototype.setCallableArgs = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Instruction = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Instruction, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Instruction.displayName = 'proto.Instruction';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Instruction.prototype.toObject = function(opt_includeInstance) {\n  return proto.Instruction.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Instruction} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Instruction.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    audio: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    image: msg.getImage_asB64(),\n    video: msg.getVideo_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Instruction}\n */\nproto.Instruction.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Instruction;\n  return proto.Instruction.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Instruction} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Instruction}\n */\nproto.Instruction.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAudio(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setImage(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setVideo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Instruction.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Instruction.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Instruction} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Instruction.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAudio();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getImage_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getVideo_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.Instruction.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Instruction.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string audio = 2;\n * @return {string}\n */\nproto.Instruction.prototype.getAudio = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Instruction.prototype.setAudio = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bytes image = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.Instruction.prototype.getImage = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes image = 3;\n * This is a type-conversion wrapper around `getImage()`\n * @return {string}\n */\nproto.Instruction.prototype.getImage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getImage()));\n};\n\n\n/**\n * optional bytes image = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getImage()`\n * @return {!Uint8Array}\n */\nproto.Instruction.prototype.getImage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getImage()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.Instruction.prototype.setImage = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional bytes video = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.Instruction.prototype.getVideo = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes video = 4;\n * This is a type-conversion wrapper around `getVideo()`\n * @return {string}\n */\nproto.Instruction.prototype.getVideo_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getVideo()));\n};\n\n\n/**\n * optional bytes video = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getVideo()`\n * @return {!Uint8Array}\n */\nproto.Instruction.prototype.getVideo_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getVideo()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.Instruction.prototype.setVideo = function(value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Transition = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Transition.repeatedFields_, null);\n};\ngoog.inherits(proto.Transition, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Transition.displayName = 'proto.Transition';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.Transition.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Transition.prototype.toObject = function(opt_includeInstance) {\n  return proto.Transition.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Transition} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Transition.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    predicatesList: jspb.Message.toObjectList(msg.getPredicatesList(),\n    proto.TransitionPredicate.toObject, includeInstance),\n    instruction: (f = msg.getInstruction()) && proto.Instruction.toObject(includeInstance, f),\n    nextState: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Transition}\n */\nproto.Transition.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Transition;\n  return proto.Transition.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Transition} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Transition}\n */\nproto.Transition.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.TransitionPredicate;\n      reader.readMessage(value,proto.TransitionPredicate.deserializeBinaryFromReader);\n      msg.addPredicates(value);\n      break;\n    case 3:\n      var value = new proto.Instruction;\n      reader.readMessage(value,proto.Instruction.deserializeBinaryFromReader);\n      msg.setInstruction(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNextState(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Transition.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Transition.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Transition} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Transition.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPredicatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.TransitionPredicate.serializeBinaryToWriter\n    );\n  }\n  f = message.getInstruction();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.Instruction.serializeBinaryToWriter\n    );\n  }\n  f = message.getNextState();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.Transition.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Transition.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated TransitionPredicate predicates = 2;\n * @return {!Array<!proto.TransitionPredicate>}\n */\nproto.Transition.prototype.getPredicatesList = function() {\n  return /** @type{!Array<!proto.TransitionPredicate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.TransitionPredicate, 2));\n};\n\n\n/** @param {!Array<!proto.TransitionPredicate>} value */\nproto.Transition.prototype.setPredicatesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.TransitionPredicate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.TransitionPredicate}\n */\nproto.Transition.prototype.addPredicates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.TransitionPredicate, opt_index);\n};\n\n\nproto.Transition.prototype.clearPredicatesList = function() {\n  this.setPredicatesList([]);\n};\n\n\n/**\n * optional Instruction instruction = 3;\n * @return {?proto.Instruction}\n */\nproto.Transition.prototype.getInstruction = function() {\n  return /** @type{?proto.Instruction} */ (\n    jspb.Message.getWrapperField(this, proto.Instruction, 3));\n};\n\n\n/** @param {?proto.Instruction|undefined} value */\nproto.Transition.prototype.setInstruction = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.Transition.prototype.clearInstruction = function() {\n  this.setInstruction(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Transition.prototype.hasInstruction = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional string next_state = 4;\n * @return {string}\n */\nproto.Transition.prototype.getNextState = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Transition.prototype.setNextState = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Processor = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Processor, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Processor.displayName = 'proto.Processor';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Processor.prototype.toObject = function(opt_includeInstance) {\n  return proto.Processor.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Processor} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Processor.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    callableName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    callableKwargsMap: (f = msg.getCallableKwargsMap()) ? f.toObject(includeInstance, undefined) : [],\n    callableArgs: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Processor}\n */\nproto.Processor.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Processor;\n  return proto.Processor.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Processor} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Processor}\n */\nproto.Processor.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCallableName(value);\n      break;\n    case 3:\n      var value = msg.getCallableKwargsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, \"\");\n         });\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCallableArgs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Processor.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Processor.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Processor} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Processor.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCallableName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCallableKwargsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getCallableArgs();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.Processor.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Processor.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string callable_name = 2;\n * @return {string}\n */\nproto.Processor.prototype.getCallableName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Processor.prototype.setCallableName = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * map<string, bytes> callable_kwargs = 3;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!(string|Uint8Array)>}\n */\nproto.Processor.prototype.getCallableKwargsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 3, opt_noLazyCreate,\n      null));\n};\n\n\nproto.Processor.prototype.clearCallableKwargsMap = function() {\n  this.getCallableKwargsMap().clear();\n};\n\n\n/**\n * optional string callable_args = 4;\n * @return {string}\n */\nproto.Processor.prototype.getCallableArgs = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Processor.prototype.setCallableArgs = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.State = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.State.repeatedFields_, null);\n};\ngoog.inherits(proto.State, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.State.displayName = 'proto.State';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.State.repeatedFields_ = [2,3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.State.prototype.toObject = function(opt_includeInstance) {\n  return proto.State.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.State} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.State.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    processorsList: jspb.Message.toObjectList(msg.getProcessorsList(),\n    proto.Processor.toObject, includeInstance),\n    transitionsList: jspb.Message.toObjectList(msg.getTransitionsList(),\n    proto.Transition.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.State}\n */\nproto.State.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.State;\n  return proto.State.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.State} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.State}\n */\nproto.State.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.Processor;\n      reader.readMessage(value,proto.Processor.deserializeBinaryFromReader);\n      msg.addProcessors(value);\n      break;\n    case 3:\n      var value = new proto.Transition;\n      reader.readMessage(value,proto.Transition.deserializeBinaryFromReader);\n      msg.addTransitions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.State.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.State.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.State} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.State.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getProcessorsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.Processor.serializeBinaryToWriter\n    );\n  }\n  f = message.getTransitionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.Transition.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.State.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.State.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated Processor processors = 2;\n * @return {!Array<!proto.Processor>}\n */\nproto.State.prototype.getProcessorsList = function() {\n  return /** @type{!Array<!proto.Processor>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Processor, 2));\n};\n\n\n/** @param {!Array<!proto.Processor>} value */\nproto.State.prototype.setProcessorsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.Processor=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Processor}\n */\nproto.State.prototype.addProcessors = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Processor, opt_index);\n};\n\n\nproto.State.prototype.clearProcessorsList = function() {\n  this.setProcessorsList([]);\n};\n\n\n/**\n * repeated Transition transitions = 3;\n * @return {!Array<!proto.Transition>}\n */\nproto.State.prototype.getTransitionsList = function() {\n  return /** @type{!Array<!proto.Transition>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Transition, 3));\n};\n\n\n/** @param {!Array<!proto.Transition>} value */\nproto.State.prototype.setTransitionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.Transition=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Transition}\n */\nproto.State.prototype.addTransitions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Transition, opt_index);\n};\n\n\nproto.State.prototype.clearTransitionsList = function() {\n  this.setTransitionsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.StateMachine = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.StateMachine.repeatedFields_, null);\n};\ngoog.inherits(proto.StateMachine, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.StateMachine.displayName = 'proto.StateMachine';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.StateMachine.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.StateMachine.prototype.toObject = function(opt_includeInstance) {\n  return proto.StateMachine.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.StateMachine} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.StateMachine.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    statesList: jspb.Message.toObjectList(msg.getStatesList(),\n    proto.State.toObject, includeInstance),\n    assetsMap: (f = msg.getAssetsMap()) ? f.toObject(includeInstance, undefined) : [],\n    startState: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.StateMachine}\n */\nproto.StateMachine.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.StateMachine;\n  return proto.StateMachine.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.StateMachine} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.StateMachine}\n */\nproto.StateMachine.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.State;\n      reader.readMessage(value,proto.State.deserializeBinaryFromReader);\n      msg.addStates(value);\n      break;\n    case 3:\n      var value = msg.getAssetsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, \"\");\n         });\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStartState(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.StateMachine.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.StateMachine.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.StateMachine} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.StateMachine.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getStatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.State.serializeBinaryToWriter\n    );\n  }\n  f = message.getAssetsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getStartState();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.StateMachine.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.StateMachine.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated State states = 2;\n * @return {!Array<!proto.State>}\n */\nproto.StateMachine.prototype.getStatesList = function() {\n  return /** @type{!Array<!proto.State>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.State, 2));\n};\n\n\n/** @param {!Array<!proto.State>} value */\nproto.StateMachine.prototype.setStatesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.State=} opt_value\n * @param {number=} opt_index\n * @return {!proto.State}\n */\nproto.StateMachine.prototype.addStates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.State, opt_index);\n};\n\n\nproto.StateMachine.prototype.clearStatesList = function() {\n  this.setStatesList([]);\n};\n\n\n/**\n * map<string, bytes> assets = 3;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!(string|Uint8Array)>}\n */\nproto.StateMachine.prototype.getAssetsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 3, opt_noLazyCreate,\n      null));\n};\n\n\nproto.StateMachine.prototype.clearAssetsMap = function() {\n  this.getAssetsMap().clear();\n};\n\n\n/**\n * optional string start_state = 4;\n * @return {string}\n */\nproto.StateMachine.prototype.getStartState = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.StateMachine.prototype.setStartState = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\ngoog.object.extend(exports, proto);\n"],"sourceRoot":""}