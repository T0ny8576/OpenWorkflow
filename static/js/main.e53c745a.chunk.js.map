{"version":3,"sources":["wca-state-machine_pb.js","diagram.js","utils.js","infoBox.js","toolbar.js","newElementModal.js","App.js","serviceWorker.js","index.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","TransitionPredicate","opt_data","Message","initialize","this","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","name","getFieldWithDefault","callableName","callableKwargsMap","getCallableKwargsMap","undefined","callableArgs","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setName","setCallableName","readMessage","message","Map","readBytes","setCallableArgs","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","getName","length","writeString","getCallableName","getLength","writeBytes","getCallableArgs","setProto3StringField","opt_noLazyCreate","getMapField","clearCallableKwargsMap","clear","Instruction","audio","image","getImage_asB64","video","getVideo_asB64","setAudio","setImage","setVideo","getAudio","getImage_asU8","getVideo_asU8","getImage","bytesAsB64","bytesAsU8","setProto3BytesField","getVideo","Transition","repeatedFields_","predicatesList","toObjectList","getPredicatesList","instruction","getInstruction","nextState","addPredicates","setInstruction","setNextState","writeRepeatedMessage","writeMessage","getNextState","getRepeatedWrapperField","setPredicatesList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearPredicatesList","getWrapperField","setWrapperField","clearInstruction","hasInstruction","getField","Processor","State","processorsList","getProcessorsList","transitionsList","getTransitionsList","addProcessors","addTransitions","setProcessorsList","clearProcessorsList","setTransitionsList","clearTransitionsList","StateMachine","statesList","getStatesList","assetsMap","getAssetsMap","startState","addStates","setStartState","getStartState","setStatesList","clearStatesList","clearAssetsMap","object","extend","exports","joint","shapes","basic","Circle","define","attrs","circle","stroke-width","text","font-weight","dia","Link",".marker-target","d",".link-tools","display",".tool-remove","smooth","Diagram","_Component","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","graph","Graph","state_shape_width","state_shape_height","state_spacing_x","state_spacing_y","state_per_row","cellId2FSMElement","renderAllStates","bind","assertThisInitialized","renderAllTransitions","getStateName2CellMap","clearGraph","createClass","key","_this$props","onClickCell","fsm","$el","$","el","paper","Paper","width","height","gridSize","model","on","Math","floor","parseInt","options","console","log","cell","stateCells","push","_this2","map","state","idx","x","y","label","fsa","position","size","addGraphCellWithRef","_this3","states","stateName2Cell","transition","source","target","Arrow","id","labels","getElements","jointElement","stateName","attr","error","ref","addCell","_this4","_this$props2","react_default","a","createElement","Component","FSMElementType","STATE","Symbol","TRANSITION","freeze","getFSMElementType","element","isObject","o","getPropertyByString","s","replace","split","i","n","k","InfoBox","_ref","elementType","tableData","callableItem","callable_name","callable_args","tableColumns","Header","accessor","filterMethod","filter","rows","matchSorter","keys","filterAll","ListGroup_default","ListGroupItem_default","es","data","filterable","defaultFilterMethod","row","String","columns","defaultPageSize","className","ToolBar","onImport","onAdd","onExport","onDelete","Fragment","Row_default","ButtonGroup_default","Col_default","sm","lib_default","as","onChange","Button_default","variant","onClick","DropdownButton_default","title","Dropdown_default","Item","isEmpty","errorMessage","test","isDuplicate","existingItemArray","includes","BSFormikField","field","type","placeholder","defaultValue","isValid","objectWithoutProperties","Form_default","Group","Row","Label","column","Control","assign","required","SelectFormikField","_ref2","form","selectOptions","react_select_esm","find","option","setFieldValue","onBlur","CallableNameField","_ref3","newElementModal_BSFormikField","CallableArgField","_ref4","addFieldError","errors","fieldName","createCallableMultiFields","callableTitle","zoo","values","index","arrayHelpers","zooOptions","getZooOptions","formik_esm","concat","component","validate","newElementModal_SelectFormikField","createCallableArgMultiFields","JSON","stringify","remove","args","argIndex","NewElementModal","React","createRef","show","onModalCancel","onModalSave","callableZoo","callableButtonValue","procZoo","predZoo","Error","Modal_default","onHide","handleClose","Title","Body","initialValues","callable","onSubmit","_ref5","setSubmitting","render","_ref6","isUniqueName","fsmStateOptions","createTransitionBasicFields","eachCallable","Footer","e","current","submitForm","fsmPb","App","diagramRef","alert","curFSMElement","alertMsg","showNewElementModal","newElementModalType","Container_default","fluid","Alert_default","dismissible","style","backgroundColor","diagram_Diagram","toolbar_ToolBar","infoBox","newElementModal","setState","fileArray","forEach","result","fileContent","fsmData","err","loadFsm","fsmPbSerialized","blob","Blob","saveAs","isSafe","isElementSafeToDelete","elementIdx","indexOf","splice","deleteStatePb","deleteTransitionPb","elementView","fsmElement","callbleFormValue","addFunc","callablePbType","_loop","callableValue","callablePb","formValue","statePb","addCallableFormDataToPb","transitionPb","to","instPb","createStatePb","createTransitionPb","findStatePb","from","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e53c745a.chunk.js","sourcesContent":["/* eslint-disable */\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.Instruction', null, global);\ngoog.exportSymbol('proto.Processor', null, global);\ngoog.exportSymbol('proto.State', null, global);\ngoog.exportSymbol('proto.StateMachine', null, global);\ngoog.exportSymbol('proto.Transition', null, global);\ngoog.exportSymbol('proto.TransitionPredicate', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.TransitionPredicate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.TransitionPredicate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.TransitionPredicate.displayName = 'proto.TransitionPredicate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.TransitionPredicate.prototype.toObject = function(opt_includeInstance) {\n  return proto.TransitionPredicate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.TransitionPredicate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TransitionPredicate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    callableName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    callableKwargsMap: (f = msg.getCallableKwargsMap()) ? f.toObject(includeInstance, undefined) : [],\n    callableArgs: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.TransitionPredicate}\n */\nproto.TransitionPredicate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.TransitionPredicate;\n  return proto.TransitionPredicate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.TransitionPredicate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.TransitionPredicate}\n */\nproto.TransitionPredicate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCallableName(value);\n      break;\n    case 3:\n      var value = msg.getCallableKwargsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, \"\");\n         });\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCallableArgs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.TransitionPredicate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.TransitionPredicate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.TransitionPredicate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.TransitionPredicate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCallableName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCallableKwargsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getCallableArgs();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.TransitionPredicate.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.TransitionPredicate.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string callable_name = 2;\n * @return {string}\n */\nproto.TransitionPredicate.prototype.getCallableName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.TransitionPredicate.prototype.setCallableName = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * map<string, bytes> callable_kwargs = 3;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!(string|Uint8Array)>}\n */\nproto.TransitionPredicate.prototype.getCallableKwargsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 3, opt_noLazyCreate,\n      null));\n};\n\n\nproto.TransitionPredicate.prototype.clearCallableKwargsMap = function() {\n  this.getCallableKwargsMap().clear();\n};\n\n\n/**\n * optional string callable_args = 4;\n * @return {string}\n */\nproto.TransitionPredicate.prototype.getCallableArgs = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.TransitionPredicate.prototype.setCallableArgs = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Instruction = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Instruction, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Instruction.displayName = 'proto.Instruction';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Instruction.prototype.toObject = function(opt_includeInstance) {\n  return proto.Instruction.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Instruction} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Instruction.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    audio: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    image: msg.getImage_asB64(),\n    video: msg.getVideo_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Instruction}\n */\nproto.Instruction.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Instruction;\n  return proto.Instruction.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Instruction} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Instruction}\n */\nproto.Instruction.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAudio(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setImage(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setVideo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Instruction.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Instruction.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Instruction} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Instruction.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAudio();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getImage_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getVideo_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.Instruction.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Instruction.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string audio = 2;\n * @return {string}\n */\nproto.Instruction.prototype.getAudio = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Instruction.prototype.setAudio = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bytes image = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.Instruction.prototype.getImage = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes image = 3;\n * This is a type-conversion wrapper around `getImage()`\n * @return {string}\n */\nproto.Instruction.prototype.getImage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getImage()));\n};\n\n\n/**\n * optional bytes image = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getImage()`\n * @return {!Uint8Array}\n */\nproto.Instruction.prototype.getImage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getImage()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.Instruction.prototype.setImage = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional bytes video = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.Instruction.prototype.getVideo = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes video = 4;\n * This is a type-conversion wrapper around `getVideo()`\n * @return {string}\n */\nproto.Instruction.prototype.getVideo_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getVideo()));\n};\n\n\n/**\n * optional bytes video = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getVideo()`\n * @return {!Uint8Array}\n */\nproto.Instruction.prototype.getVideo_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getVideo()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.Instruction.prototype.setVideo = function(value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Transition = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.Transition.repeatedFields_, null);\n};\ngoog.inherits(proto.Transition, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Transition.displayName = 'proto.Transition';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.Transition.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Transition.prototype.toObject = function(opt_includeInstance) {\n  return proto.Transition.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Transition} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Transition.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    predicatesList: jspb.Message.toObjectList(msg.getPredicatesList(),\n    proto.TransitionPredicate.toObject, includeInstance),\n    instruction: (f = msg.getInstruction()) && proto.Instruction.toObject(includeInstance, f),\n    nextState: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Transition}\n */\nproto.Transition.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Transition;\n  return proto.Transition.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Transition} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Transition}\n */\nproto.Transition.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.TransitionPredicate;\n      reader.readMessage(value,proto.TransitionPredicate.deserializeBinaryFromReader);\n      msg.addPredicates(value);\n      break;\n    case 3:\n      var value = new proto.Instruction;\n      reader.readMessage(value,proto.Instruction.deserializeBinaryFromReader);\n      msg.setInstruction(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNextState(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Transition.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Transition.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Transition} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Transition.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPredicatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.TransitionPredicate.serializeBinaryToWriter\n    );\n  }\n  f = message.getInstruction();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.Instruction.serializeBinaryToWriter\n    );\n  }\n  f = message.getNextState();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.Transition.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Transition.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated TransitionPredicate predicates = 2;\n * @return {!Array<!proto.TransitionPredicate>}\n */\nproto.Transition.prototype.getPredicatesList = function() {\n  return /** @type{!Array<!proto.TransitionPredicate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.TransitionPredicate, 2));\n};\n\n\n/** @param {!Array<!proto.TransitionPredicate>} value */\nproto.Transition.prototype.setPredicatesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.TransitionPredicate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.TransitionPredicate}\n */\nproto.Transition.prototype.addPredicates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.TransitionPredicate, opt_index);\n};\n\n\nproto.Transition.prototype.clearPredicatesList = function() {\n  this.setPredicatesList([]);\n};\n\n\n/**\n * optional Instruction instruction = 3;\n * @return {?proto.Instruction}\n */\nproto.Transition.prototype.getInstruction = function() {\n  return /** @type{?proto.Instruction} */ (\n    jspb.Message.getWrapperField(this, proto.Instruction, 3));\n};\n\n\n/** @param {?proto.Instruction|undefined} value */\nproto.Transition.prototype.setInstruction = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.Transition.prototype.clearInstruction = function() {\n  this.setInstruction(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.Transition.prototype.hasInstruction = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional string next_state = 4;\n * @return {string}\n */\nproto.Transition.prototype.getNextState = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Transition.prototype.setNextState = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Processor = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Processor, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Processor.displayName = 'proto.Processor';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Processor.prototype.toObject = function(opt_includeInstance) {\n  return proto.Processor.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Processor} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Processor.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    callableName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    callableKwargsMap: (f = msg.getCallableKwargsMap()) ? f.toObject(includeInstance, undefined) : [],\n    callableArgs: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Processor}\n */\nproto.Processor.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Processor;\n  return proto.Processor.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Processor} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Processor}\n */\nproto.Processor.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCallableName(value);\n      break;\n    case 3:\n      var value = msg.getCallableKwargsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, \"\");\n         });\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCallableArgs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Processor.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Processor.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Processor} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Processor.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCallableName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCallableKwargsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getCallableArgs();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.Processor.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Processor.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string callable_name = 2;\n * @return {string}\n */\nproto.Processor.prototype.getCallableName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Processor.prototype.setCallableName = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * map<string, bytes> callable_kwargs = 3;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!(string|Uint8Array)>}\n */\nproto.Processor.prototype.getCallableKwargsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 3, opt_noLazyCreate,\n      null));\n};\n\n\nproto.Processor.prototype.clearCallableKwargsMap = function() {\n  this.getCallableKwargsMap().clear();\n};\n\n\n/**\n * optional string callable_args = 4;\n * @return {string}\n */\nproto.Processor.prototype.getCallableArgs = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.Processor.prototype.setCallableArgs = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.State = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.State.repeatedFields_, null);\n};\ngoog.inherits(proto.State, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.State.displayName = 'proto.State';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.State.repeatedFields_ = [2,3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.State.prototype.toObject = function(opt_includeInstance) {\n  return proto.State.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.State} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.State.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    processorsList: jspb.Message.toObjectList(msg.getProcessorsList(),\n    proto.Processor.toObject, includeInstance),\n    transitionsList: jspb.Message.toObjectList(msg.getTransitionsList(),\n    proto.Transition.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.State}\n */\nproto.State.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.State;\n  return proto.State.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.State} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.State}\n */\nproto.State.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.Processor;\n      reader.readMessage(value,proto.Processor.deserializeBinaryFromReader);\n      msg.addProcessors(value);\n      break;\n    case 3:\n      var value = new proto.Transition;\n      reader.readMessage(value,proto.Transition.deserializeBinaryFromReader);\n      msg.addTransitions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.State.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.State.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.State} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.State.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getProcessorsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.Processor.serializeBinaryToWriter\n    );\n  }\n  f = message.getTransitionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.Transition.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.State.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.State.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated Processor processors = 2;\n * @return {!Array<!proto.Processor>}\n */\nproto.State.prototype.getProcessorsList = function() {\n  return /** @type{!Array<!proto.Processor>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Processor, 2));\n};\n\n\n/** @param {!Array<!proto.Processor>} value */\nproto.State.prototype.setProcessorsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.Processor=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Processor}\n */\nproto.State.prototype.addProcessors = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Processor, opt_index);\n};\n\n\nproto.State.prototype.clearProcessorsList = function() {\n  this.setProcessorsList([]);\n};\n\n\n/**\n * repeated Transition transitions = 3;\n * @return {!Array<!proto.Transition>}\n */\nproto.State.prototype.getTransitionsList = function() {\n  return /** @type{!Array<!proto.Transition>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.Transition, 3));\n};\n\n\n/** @param {!Array<!proto.Transition>} value */\nproto.State.prototype.setTransitionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.Transition=} opt_value\n * @param {number=} opt_index\n * @return {!proto.Transition}\n */\nproto.State.prototype.addTransitions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Transition, opt_index);\n};\n\n\nproto.State.prototype.clearTransitionsList = function() {\n  this.setTransitionsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.StateMachine = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.StateMachine.repeatedFields_, null);\n};\ngoog.inherits(proto.StateMachine, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.StateMachine.displayName = 'proto.StateMachine';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.StateMachine.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.StateMachine.prototype.toObject = function(opt_includeInstance) {\n  return proto.StateMachine.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.StateMachine} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.StateMachine.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    statesList: jspb.Message.toObjectList(msg.getStatesList(),\n    proto.State.toObject, includeInstance),\n    assetsMap: (f = msg.getAssetsMap()) ? f.toObject(includeInstance, undefined) : [],\n    startState: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.StateMachine}\n */\nproto.StateMachine.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.StateMachine;\n  return proto.StateMachine.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.StateMachine} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.StateMachine}\n */\nproto.StateMachine.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.State;\n      reader.readMessage(value,proto.State.deserializeBinaryFromReader);\n      msg.addStates(value);\n      break;\n    case 3:\n      var value = msg.getAssetsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, \"\");\n         });\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStartState(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.StateMachine.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.StateMachine.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.StateMachine} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.StateMachine.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getStatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.State.serializeBinaryToWriter\n    );\n  }\n  f = message.getAssetsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getStartState();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.StateMachine.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.StateMachine.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated State states = 2;\n * @return {!Array<!proto.State>}\n */\nproto.StateMachine.prototype.getStatesList = function() {\n  return /** @type{!Array<!proto.State>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.State, 2));\n};\n\n\n/** @param {!Array<!proto.State>} value */\nproto.StateMachine.prototype.setStatesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.State=} opt_value\n * @param {number=} opt_index\n * @return {!proto.State}\n */\nproto.StateMachine.prototype.addStates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.State, opt_index);\n};\n\n\nproto.StateMachine.prototype.clearStatesList = function() {\n  this.setStatesList([]);\n};\n\n\n/**\n * map<string, bytes> assets = 3;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!(string|Uint8Array)>}\n */\nproto.StateMachine.prototype.getAssetsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 3, opt_noLazyCreate,\n      null));\n};\n\n\nproto.StateMachine.prototype.clearAssetsMap = function() {\n  this.getAssetsMap().clear();\n};\n\n\n/**\n * optional string start_state = 4;\n * @return {string}\n */\nproto.StateMachine.prototype.getStartState = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.StateMachine.prototype.setStartState = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","import React, { Component } from \"react\";\nimport $ from \"jquery\";\nimport joint from \"jointjs\";\n\n// define custom state machine JointJS elements\njoint.shapes.basic.Circle.define(\"fsa.State\", {\n  attrs: {\n    circle: {\n      \"stroke-width\": 3\n    },\n    text: {\n      \"font-weight\": \"800\"\n    }\n  }\n});\n\njoint.dia.Link.define(\"fsa.Arrow\", {\n  attrs: {\n    \".marker-target\": {\n      d: \"M 10 0 L 0 5 L 10 10 z\"\n    },\n    \".link-tools\": {\n      display: \"none\"\n    },\n    \".tool-remove\": {\n      display: \"none\"\n    }\n  },\n  smooth: true\n});\n\nconst create_transition_cell = (source, target, label) => {\n  var cell = new joint.shapes.fsa.Arrow({\n    source: {\n      id: source.id\n    },\n    target: {\n      id: target.id\n    },\n    labels: [\n      {\n        position: 0.5,\n        attrs: {\n          text: {\n            text: label || \"\"\n          }\n        }\n      }\n    ]\n  });\n  return cell;\n};\n\nconst create_state_cell = (x, y, label) => {\n  let cell = new joint.shapes.fsa.State({\n    position: {\n      x: x,\n      y: y\n    },\n    size: {\n      width: 100,\n      height: 100\n    },\n    attrs: {\n      text: {\n        text: label\n      }\n    }\n  });\n  return cell;\n};\n\nexport class Diagram extends Component {\n  constructor(props) {\n    super(props);\n    this.graph = new joint.dia.Graph();\n    this.state_shape_width = 50;\n    this.state_shape_height = 50;\n    this.state_spacing_x = 250;\n    this.state_spacing_y = 150;\n    this.state_per_row = 3;\n    this.cellId2FSMElement = {};\n    this.renderAllStates = this.renderAllStates.bind(this);\n    this.renderAllTransitions = this.renderAllTransitions.bind(this);\n    this.getStateName2CellMap = this.getStateName2CellMap.bind(this);\n    this.clearGraph = this.clearGraph.bind(this);\n  }\n\n  componentDidMount() {\n    const { fsm, onClickCell } = this.props;\n    this.$el = $(this.el);\n    const paper = new joint.dia.Paper({\n      el: this.$el,\n      width: 800,\n      height: 800,\n      gridSize: 1,\n      model: this.graph\n    });\n    paper.on(\"cell:pointerdblclick\", onClickCell);\n    this.state_per_row =\n      Math.floor(\n        parseInt(paper.options.width, 10) /\n          (this.state_shape_width + this.state_spacing_x)\n      ) + 1;\n  }\n\n  componentWillUnmount() {\n    this.graph.clear();\n    this.cellId2FSMElement = {};\n  }\n\n  componentDidUpdate() {\n    console.log(\"called compnenet did update\");\n  }\n\n  handleStateCallback(cell) {\n    this.stateCells.push(cell);\n    console.log(\"hanldeStateCallback: \" + this.stateCells);\n  }\n\n  renderAllStates(fsm) {\n    console.log(\"called render all states\");\n    const stateCells = fsm.getStatesList().map((state, idx) => {\n      const cell = create_state_cell(\n        Math.floor(idx % this.state_per_row) * this.state_spacing_x,\n        Math.floor(idx / this.state_per_row) * this.state_spacing_y,\n        state.getName()\n      );\n      this.addGraphCellWithRef(cell, state);\n    }, this);\n    return stateCells;\n  }\n\n  renderAllTransitions(fsm) {\n    const states = fsm.getStatesList();\n    const stateName2Cell = this.getStateName2CellMap();\n    const transitionCells = states.map(state => {\n      return state.getTransitionsList().map(transition => {\n        const cell = create_transition_cell(\n          stateName2Cell[state.getName()],\n          stateName2Cell[transition.getNextState()],\n          transition.getName()\n        );\n        this.addGraphCellWithRef(cell, transition);\n      }, this);\n    }, this);\n    return transitionCells;\n  }\n\n  getStateName2CellMap() {\n    const stateCells = this.graph.getElements();\n    const stateName2Cell = {};\n    stateCells.map(jointElement => {\n      const stateName = jointElement.attr(\"text/text\");\n      if (stateName in stateName2Cell) {\n        // throw new Error(\"Invalid FSM! Duplicate state name found.\");\n        console.error(\"Duplicate State Name: \" + stateName);\n      } else {\n        stateName2Cell[stateName] = jointElement;\n      }\n    });\n    return stateName2Cell;\n  }\n\n  addGraphCellWithRef(cell, ref) {\n    // addGraphCell add a cell to the graph and record the reference object\n    // this cell represents.\n    this.graph.addCell(cell);\n    this.cellId2FSMElement[cell.id] = ref;\n  }\n\n  clearGraph() {\n    this.graph.clear();\n    this.cellId2FSMElement = {};\n  }\n\n  render() {\n    console.log(\"Called render diagram\");\n    console.log(this.props.fsm);\n    const { fsm, onClickCell } = this.props;\n    if (fsm != null) {\n      this.clearGraph();\n      this.renderAllStates(fsm);\n      this.renderAllTransitions(fsm);\n    }\n    return (\n      <div ref={el => (this.el = el)}>\n        <h4>Diagram</h4>\n      </div>\n    );\n  }\n}\n","export const FSMElementType = {\n    STATE: Symbol(\"state\"),\n    TRANSITION: Symbol(\"transition\"),\n};\nObject.freeze(FSMElementType);\n\n\n// only support state and transition two types for now\nexport const getFSMElementType = (element) => {\n    return typeof element.getProcessorsList === \"function\"\n        ? FSMElementType.STATE : FSMElementType.TRANSITION;\n}\n\nfunction isObject(o) {\n    //How you acomplish this is upto you.\n    return o === Object(o);\n}\n\n// allow array access using nested not annatation\n// obj = {\n//     'a': ['property': 'test']\n// }\n// e.g. obj['a.0.property']\nexport const getPropertyByString = function (o, s) {\n    if (s) {\n        s = s.replace(/^\\./, '');           // strip a leading dot\n        var a = s.split('.');\n        for (var i = 0, n = a.length; i < n; ++i) {\n            var k = a[i];\n            if (isObject(o) && k in o) {\n                o = o[k];\n            } else {\n                return;\n            }\n        }\n        return o;\n    } else {\n        return;\n    }\n}","import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport matchSorter from \"match-sorter\";\nimport ListGroup from \"react-bootstrap/lib/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/lib/ListGroupItem\";\nimport { FSMElementType, getFSMElementType } from \"./utils.js\";\nimport \"react-table/react-table.css\";\n\nconst InfoBox = ({ element }) => {\n  console.log(\"infobox render called\");\n  const elementType = getFSMElementType(element);\n  const tableData =\n    elementType === FSMElementType.STATE\n      ? element.getProcessorsList().map(callableItem => {\n        return {\n          name: callableItem.getName(),\n          callable_name: callableItem.getCallableName(),\n          callable_args: callableItem.getCallableArgs()\n        };\n      })\n      : element.getPredicatesList().map(callableItem => {\n        return {\n          name: callableItem.getName(),\n          callable_name: callableItem.getCallableName(),\n          callable_args: callableItem.getCallableArgs()\n        };\n      });\n  const tableColumns =\n    elementType === FSMElementType.STATE\n      ? [\n        {\n          Header: \"Processor Name\",\n          accessor: \"name\",\n          filterMethod: (filter, rows) =>\n            matchSorter(rows, filter.value, { keys: [\"name\"] }),\n          filterAll: true\n        },\n        {\n          Header: \"Processing Function\",\n          accessor: \"callable_name\",\n          filterMethod: (filter, rows) =>\n            matchSorter(rows, filter.value, {\n              keys: [\"callable_name\"]\n            }),\n          filterAll: true\n        },\n        {\n          Header: \"Arguments\",\n          accessor: \"callable_args\",\n          filterMethod: (filter, rows) =>\n            matchSorter(rows, filter.value, {\n              keys: [\"callable_args\"]\n            }),\n          filterAll: true\n        }\n      ]\n      : [\n        {\n          Header: \"Predicate Name\",\n          accessor: \"name\",\n          filterMethod: (filter, rows) =>\n            matchSorter(rows, filter.value, { keys: [\"name\"] }),\n          filterAll: true\n        },\n        {\n          Header: \"Predicate Function\",\n          accessor: \"callable_name\",\n          filterMethod: (filter, rows) =>\n            matchSorter(rows, filter.value, {\n              keys: [\"callable_name\"]\n            }),\n          filterAll: true\n        },\n        {\n          Header: \"Arguments\",\n          accessor: \"callable_args\",\n          filterMethod: (filter, rows) =>\n            matchSorter(rows, filter.value, {\n              keys: [\"callable_args\"]\n            }),\n          filterAll: true\n        }\n      ];\n  return (\n    <div>\n      <h3>Information</h3>\n      <ListGroup>\n        <ListGroupItem>\n          <h4>Name: {element.getName()}</h4>\n        </ListGroupItem>\n        <ListGroupItem>\n          <h4>Type: {elementType}</h4>\n        </ListGroupItem>\n        {\n          elementType === FSMElementType.TRANSITION &&\n          <ListGroupItem>\n            <h4>Instruction</h4>\n            <h5>Audio:</h5><p>{element.getInstruction().getAudio()}</p>\n            <h5>Image:</h5><p>{element.getInstruction().getImage()}</p> {/*TODO(junjuew): add proper display of images and videos*/}\n            <h5>Video:</h5><p>{element.getInstruction().getVideo()}</p>\n          </ListGroupItem>\n        }\n        <ListGroupItem>\n          {(\n            <ReactTable\n              data={tableData}\n              filterable\n              defaultFilterMethod={(filter, row) =>\n                String(row[filter.id]) === filter.value\n              }\n              columns={tableColumns}\n              defaultPageSize={5}\n              className=\"-striped -highlight\"\n            />\n          )}\n        </ListGroupItem>\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default InfoBox;\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/lib/Button\";\nimport ButtonGroup from \"react-bootstrap/lib/ButtonGroup\";\nimport DropdownButton from \"react-bootstrap/lib/DropdownButton\";\nimport Dropdown from \"react-bootstrap/lib/Dropdown\";\nimport Row from \"react-bootstrap/lib/Row\";\nimport Col from \"react-bootstrap/lib/Col\";\nimport FileReaderInput from \"react-file-reader-input\";\nimport { FSMElementType } from \"./utils.js\";\n\nexport const ToolBar = ({\n  onImport,\n  onAdd,\n  onExport,\n  onDelete\n}) => {\n  return (\n    <>\n      <Row>\n        <ButtonGroup>\n          <Col sm={4}>\n            <FileReaderInput as=\"buffer\" onChange={onImport}>\n              <Button variant=\"primary\">Import</Button>\n            </FileReaderInput>\n          </Col>\n          <Col sm={4}>\n            <Button variant=\"primary\" onClick={onExport}>\n              Export\n          </Button>\n          </Col>\n          <Col sm={4}>\n            <DropdownButton id=\"dropdown-basic-button\" title=\"Add\">\n              <Dropdown.Item onClick={() => onAdd(FSMElementType.STATE)}>State</Dropdown.Item>\n              <Dropdown.Item onClick={() => onAdd(FSMElementType.TRANSITION)}>Transition</Dropdown.Item>\n            </DropdownButton>\n          </Col>\n          <Col sm={4}>\n            <Button variant=\"primary\" onClick={onDelete}>\n              Delete\n          </Button>\n          </Col>\n        </ButtonGroup>\n      </Row>\n    </>\n  );\n};\n","import React, { Component } from \"react\";\nimport Modal from \"react-bootstrap/lib/Modal\";\nimport Button from \"react-bootstrap/lib/Button\";\nimport Form from \"react-bootstrap/lib/Form\";\nimport Col from \"react-bootstrap/lib/Col\";\nimport Row from \"react-bootstrap/lib/Row\";\nimport { Formik, Form as FormikForm, Field, FieldArray } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./App.css\";\nimport Select from 'react-select'\nimport procZoo from './processor-zoo.json';\nimport predZoo from './predicate-zoo.json';\nimport { FSMElementType, getPropertyByString } from \"./utils.js\";\n\n/** Helper function to create options for Select elements\n * from a pre-defined callable zoo (procZoo or predZoo)\n * \n * @param {*} zoo \n */\nconst getZooOptions = (zoo) => {\n  return Object.keys(zoo).map((key) => {\n    return { value: key, label: key }\n  })\n}\n\n/** Custom validate functions for Formik forms\n * \n * @param {*} param0 \n */\nconst isEmpty = (value) => {\n  let errorMessage;\n  if (value === undefined || value === null || !/^.+$/i.test(value)) {\n    errorMessage = 'Required. Cannot be empty.'\n  }\n  console.log(\"isEmpty returns \" + errorMessage);\n  return errorMessage;\n}\n\nconst isDuplicate = (value, existingItemArray) => {\n  let errorMessage;\n  if (value === undefined || value === null || existingItemArray.includes(value)) {\n    errorMessage = 'Duplicate name. Names must be unique.'\n  }\n  return errorMessage;\n}\n\nconst isUniqueName = (value, existingItemArray) => {\n  if (isEmpty(value)) {\n    return isEmpty(value)\n  }\n  if (isDuplicate(value, existingItemArray)) {\n    return isDuplicate(value, existingItemArray)\n  }\n  return null;\n}\n\n/*\nCustomize the look of form fields using bootstrap.\nThese following React components should be passed as the \"component\"\nproperty of a Formik field.\n*/\nconst BSFormikField = ({\n  field, // { name, value, onChange, onBlur }\n  type,\n  label,\n  placeholder,\n  defaultValue,\n  isValid,\n  ...props\n}) => (\n    <Form.Group as={Row}>\n      <Form.Label column>{label}</Form.Label>\n      <Col>\n        <Form.Control\n          required\n          {...field}\n          {...props}\n          type={type}\n          placeholder={placeholder}\n          value={field.value || defaultValue || ''} // to supress uncontrolled to controlled warning\n          isValid={isValid}\n        />\n      </Col>\n      {/* <Form.Control.Feedback>\n        Looks good!</Form.Control.Feedback> */}\n    </Form.Group>\n  );\n\n/** Custom the look of a Formik Select field with react-select\n * \n * @param {*} param0 \n */\nconst SelectFormikField = ({\n  field,\n  form, // values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n  label,\n  selectOptions,\n  ...props\n}) => (\n    <Form.Group as={Row}>\n      <Form.Label column>{label}</Form.Label>\n      <Col>\n        <Select\n          {...field}\n          {...props}\n          options={selectOptions}\n          name={field.name}\n          value={selectOptions ? selectOptions.find(option => option.value === field.value) : \"\"}\n          onChange={(option) => form.setFieldValue(field.name, option.value)}\n          onBlur={field.onBlur}\n        />\n      </Col>\n    </Form.Group>\n  )\n\nconst CallableNameField = ({\n  field,  // name, value, onChange, onBlur\n  ...props\n}) => (\n    <BSFormikField\n      field={field}\n      type=\"text\"\n      label=\"name\"\n      placeholder=\"Enter Name\"\n      {...props} />\n  )\n\nconst CallableArgField = ({\n  field,\n  key, // unused. not passed to the field. just to suppress parent's react list warning\n  label,\n  placeholder,\n  ...props\n}) => (\n    <BSFormikField\n      field={field}\n      type=\"text\"\n      label={label}\n      placeholder={placeholder}\n      {...props} />\n  )\n\nconst addFieldError = (errors, fieldName) => {\n  if (getPropertyByString(errors, fieldName)) {\n    return <div className=\"text-danger\">{getPropertyByString(errors, fieldName)}</div>\n  } else {\n    return null;\n  }\n}\n\n/*\nFunctions to create a group of form field to present a \"callable\".\nThe UIs to create a \"callable\" consist of following form fields:\n1. callable name\n2. callable type\n3. A field for each callable argument (loaded from callable zoos)\n*/\nconst createCallableMultiFields = (callableTitle, zoo, values, index, arrayHelpers, errors) => {\n  const zooOptions = getZooOptions(zoo);\n  return (<div key={index} className=\"border\">\n    <h6>{callableTitle}</h6>\n    <Field\n      name={`callable.${index}.name`} // add values.callable[index].name\n      component={CallableNameField}\n      validate={isEmpty}\n      isValid={!isEmpty(getPropertyByString(errors, `callable.${index}.name`))}\n    />\n    {addFieldError(errors, `callable.${index}.name`)}\n    <Field\n      name={`callable.${index}.type`} // add values.callable[index].name\n      component={(props) => <SelectFormikField {...props} label=\"Type\" selectOptions={zooOptions} />}\n      validate={isEmpty}\n    />\n    {addFieldError(errors, `callable.${index}.type`)}\n    {\n      // values.hasOwnProperty('callable') &&\n      // (values.callable[index] !== undefined) &&\n      // values['callable'][index]['type'] &&\n      getPropertyByString(values, `callable.${index}.type`) &&\n      createCallableArgMultiFields(zoo[values['callable'][index]['type']], index, errors)\n    }\n    <p>{JSON.stringify(values)}</p>\n    <Form.Row>\n      <Button\n        variant=\"danger\"\n        onClick={() => arrayHelpers.remove({ index })}>\n        Delete\n    </Button>\n    </Form.Row>\n  </div>)\n}\n\n/*\nCreate a field for each callable argument.\n*/\nconst createCallableArgMultiFields = (args, index, errors) => {\n  const argFields = Object.keys(args).map((key, argIndex) => {\n    return (\n      <div key={index + '.arg.' + argIndex}>\n        <Field\n          name={`callable.${index}.args.${key}`} // add values.callable[0].name\n          component={CallableArgField}\n          label={key}\n          placeholder={args[key]}\n          validate={isEmpty}\n          isValid={!getPropertyByString(errors, `callable.${index}.args.${key}`)}\n        />\n        {\n          addFieldError(errors,\n            `callable.${index}.args.${key}`)\n        }\n      </div>\n    )\n  });\n  return argFields;\n}\n\n\n/** Create transition basic fields including \n * from and to state, and instructions.\n * \n * @param {*} values \n */\nconst createTransitionBasicFields = (fsm, errors) => {\n  const fsmStateOptions = fsm.getStatesList().map((state) => {\n    return { value: state.getName(), label: state.getName() };\n  });\n  return (\n    <>\n      <Field\n        name=\"from\"\n        component={(props) => <SelectFormikField {...props} label=\"From State\" selectOptions={fsmStateOptions} />}\n        validate={isEmpty}\n        isValid={!getPropertyByString(errors, \"from\")}\n      />\n      {addFieldError(errors, \"from\")}\n      <Field\n        name=\"to\"\n        component={(props) => <SelectFormikField {...props} label=\"To State\" selectOptions={fsmStateOptions} />}\n        validate={isEmpty}\n        isValid={!getPropertyByString(errors, \"to\")}\n      />\n      {addFieldError(errors, \"to\")}\n      <Field\n        name=\"instruction.audio\"\n        component={(props) => <BSFormikField {...props} type=\"text\" label=\"Audio Instruction\" />}\n      />\n      <Field\n        name=\"instruction.image\"\n        component={(props) => <BSFormikField {...props} type=\"text\" label=\"Image Instruction\" />}\n      />\n      <Field\n        name=\"instruction.video\"\n        component={(props) => <BSFormikField {...props} type=\"text\" label=\"Video Instruction\" />}\n      />\n    </>\n  )\n}\n\n\n/**\n * A Modal used to create a new FSM element.\n * The core of the modal is a Formik form that captures\n * the user-inputted properties for the element\n */\n//TODO(junjuew): add form validation\nclass NewElementModal extends Component {\n  constructor(props) {\n    super(props);\n    this.form = React.createRef();\n  }\n\n  render() {\n    const { show, type, fsm, onModalCancel, onModalSave } = this.props;\n    console.log(fsm)\n    let title, callableTitle = \"\";\n    let callableZoo = null;\n    let callableButtonValue = \"\";\n    switch (type) {\n      case FSMElementType.STATE:\n        title = \"New State\";\n        callableTitle = \"New Processor\";\n        callableButtonValue = \"Add Processor\"\n        callableZoo = procZoo;\n        break;\n      case FSMElementType.TRANSITION:\n        title = \"New Transition\";\n        callableTitle = \"New Predicate\";\n        callableButtonValue = \"Add Predicate\"\n        callableZoo = predZoo;\n        break;\n      default:\n        throw new Error(\"Unsupported Element Type: \" + type + \". Failed to add a new element\")\n    }\n\n    return (\n      <Modal show={show} onHide={this.handleClose}>\n        <Modal.Header>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Formik\n            ref={this.form}\n            initialValues={{\n              callable: []\n            }}\n            onSubmit={(values, { props, setSubmitting }) => {\n              onModalSave(type, values);\n              setSubmitting(false);\n            }\n            }\n            render={({ values, errors }) => (\n              <FormikForm>\n                <FieldArray\n                  name=\"callable\"\n                  render={(arrayHelpers) => {\n                    return (\n                      <>\n                        {\n                          type === FSMElementType.STATE &&\n                          <>\n                            <Field\n                              name=\"name\"\n                              component={BSFormikField}\n                              type=\"text\"\n                              label=\"Name\"\n                              validate={(value) => {\n                                const existingItemArray = fsm.getStatesList().map((state) => state.getName())\n                                return isUniqueName(value, existingItemArray);\n                              }}\n                            />\n                            {addFieldError(errors, \"name\")}\n                          </>\n                        }\n                        {\n                          type === FSMElementType.TRANSITION &&\n                          <>\n                            <Field\n                              name=\"name\"\n                              component={BSFormikField}\n                              type=\"text\"\n                              label=\"Name\"\n                              validate={isEmpty}\n                            />\n                            {addFieldError(errors, \"name\")}\n                            {createTransitionBasicFields(fsm, errors)}\n                          </>\n                        }\n                        {\n                          values.callable.map((eachCallable, index) => createCallableMultiFields(\n                            callableTitle,\n                            callableZoo,\n                            values,\n                            index,\n                            arrayHelpers,\n                            errors\n                          ))\n                        }\n                        <Form.Row>\n                          <Button\n                            variant=\"light\"\n                            className=\"btn-block\"\n                            onClick={() => arrayHelpers.push({})}>\n                            {callableButtonValue}\n                          </Button>\n                        </Form.Row>\n                      </>\n                    );\n                  }}\n                />\n              </FormikForm>\n            )\n            }\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onModalCancel}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={(e) => {\n            this.form.current.submitForm();\n          }\n          }>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n\nexport default NewElementModal;\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/lib/Container\";\nimport Row from \"react-bootstrap/lib/Row\";\nimport Col from \"react-bootstrap/lib/Col\";\nimport Alert from \"react-bootstrap/lib/Alert\";\nimport { Diagram } from \"./diagram.js\";\nimport \"./App.css\";\nimport InfoBox from \"./infoBox.js\";\nimport { ToolBar } from \"./toolbar.js\";\nimport { FSMElementType, getFSMElementType } from \"./utils.js\";\nimport NewElementModal from \"./newElementModal.js\";\nimport procZoo from './processor-zoo.json';\nimport predZoo from './predicate-zoo.json';\nimport saveAs from 'file-saver';\nvar fsmPb = require(\"./wca-state-machine_pb\");\n\nfunction loadFsm(fsmData) {\n  let fsm = null;\n  try {\n    fsm = new fsmPb.StateMachine.deserializeBinary(fsmData);\n  } catch (err) {\n    throw err;\n  }\n  return fsm;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.diagramRef = React.createRef();\n    this.alert = this.alert.bind(this);\n    this.onImport = this.onImport.bind(this);\n    this.onExport = this.onExport.bind(this);\n    this.onAdd = this.onAdd.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onClickCell = this.onClickCell.bind(this);\n    this.onModalCancel = this.onModalCancel.bind(this);\n    this.onModalSave = this.onModalSave.bind(this);\n    this.state = {\n      fsm: new fsmPb.StateMachine(),\n      curFSMElement: null,\n      alertMsg: {\n        show: true,\n        type: \"info\",\n        msg: \"Welcome to State Machine Editor!\"\n      },\n      showNewElementModal: false,\n      newElementModalType: null\n    };\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <h1>State Machine Visualizer with React</h1>\n        {this.state.alertMsg.msg !== \"\" && (\n          <Alert dismissible variant={this.state.alertMsg.type}>\n            {this.state.alertMsg.msg}\n          </Alert>\n        )}\n        <Row>\n          <Col sm={6} style={{ backgroundColor: \"lavender\" }}>\n            <h4>Diagram</h4>\n            <Diagram\n              fsm={this.state.fsm}\n              onClickCell={this.onClickCell}\n              ref={this.diagramRef}\n            />\n          </Col>\n          <Col sm={6}>\n            <ToolBar onImport={this.onImport} onAdd={this.onAdd} onExport={this.onExport}\n              onDelete={this.onDelete}\n            />\n            {this.state.curFSMElement && (\n              <Row>\n                <InfoBox\n                  element={this.state.curFSMElement}\n                  style={{ width: \"100%\" }}\n                />\n              </Row>\n            )}\n          </Col>\n        </Row>\n        <footer>\n          <Container>\n            <span className=\"text-muted\">\n              Copyright Carnegie Mellon University\n            </span>\n          </Container>\n        </footer>\n        {\n          this.state.showNewElementModal &&\n          <NewElementModal\n            fsm={this.state.fsm} // new elements may depend on existing elements (e.g. adding a transition between two states)\n            show={this.state.showNewElementModal}\n            type={this.state.newElementModalType}\n            onModalSave={this.onModalSave}\n            onModalCancel={this.onModalCancel}\n          />\n        }\n      </Container>\n    );\n  }\n\n  alert(type, msg) {\n    this.setState({\n      alertMsg: {\n        type: type,\n        msg: msg\n      }\n    });\n  }\n\n  // toolbar callbacks\n  onImport(e, fileArray) {\n    fileArray.forEach(result => {\n      const e = result[0];\n      let fileContent = e.target.result;\n      let fsm = null;\n      try {\n        fsm = loadFsm(fileContent);\n        this.setState({ fsm: fsm, curFSMElement: null });\n        this.alert(\"info\", \"Success! State machine imported.\");\n      } catch (err) {\n        this.alert(\n          \"danger\",\n          \"Incorrect File Format. Failed to import the file. \\n\" + err\n        );\n      }\n    });\n  }\n\n  onExport() {\n    const fsmPb = this.state.fsm;\n    if (fsmPb.getStatesList().length === 0) {\n      this.alert(\n        \"danger\",\n        \"Empty state machine! There is nothing to save. \\n\"\n      );\n    } else {\n      // TODO(junjuew): fix start state. It should be marked by users\n      // instead of being the first state added\n      if (fsmPb.getStartState() == \"\") {\n        fsmPb.setStartState(fsmPb.getStatesList()[0].getName());\n      }\n      let fsmPbSerialized = fsmPb.serializeBinary();\n      let blob = new Blob([fsmPbSerialized], { type: \"application/octet-stream\" });\n      saveAs(blob, \"app.pbfsm\");\n    }\n  }\n\n  onAdd(type) {\n    this.setState({ showNewElementModal: true, newElementModalType: type })\n  }\n\n  isElementSafeToDelete(element) {\n    const fsm = this.state.fsm;\n    const elementType = getFSMElementType(element)\n    let isSafe = true;\n    switch (elementType) {\n      case FSMElementType.STATE:\n        // check if there are transitions starting from this state\n        if (element.getTransitionsList().length > 0) isSafe = false;\n        // check if there are transitions ending at this state \n        fsm.getStatesList().map((state) => {\n          state.getTransitionsList().map((transition) => {\n            if (transition.getNextState() === element.getName()) {\n              isSafe = false;\n            }\n          })\n        });\n        return isSafe;\n        break;\n      case FSMElementType.TRANSITION:\n        return isSafe;\n      default:\n        throw new Error(\"Unsupported Element Type: \" + elementType);\n    }\n  }\n\n  deleteStatePb(element) {\n    const fsm = this.state.fsm;\n    if (this.isElementSafeToDelete(element)) {\n      const elementIdx = fsm.getStatesList().indexOf(element);\n      fsm.getStatesList().splice(elementIdx, elementIdx + 1);\n      this.setState({ fsm: fsm, curFSMElement: null })\n    } else {\n      return this.alert(\n        \"danger\",\n        \"A state cannot be deleted unless all transitions to/from it have been deleted.\"\n      )\n    }\n  }\n\n  deleteTransitionPb(element) {\n    const fsm = this.state.fsm;\n    if (this.isElementSafeToDelete(element)) {\n      // find the state this transition belons to and removes it from\n      // the transitions list\n      fsm.getStatesList().map((state) => {\n        const elementIdx = state.getTransitionsList().indexOf(element);\n        if (elementIdx >= 0) {\n          state.getTransitionsList().splice(elementIdx, elementIdx + 1);\n        }\n      });\n      this.setState({ fsm: fsm, curFSMElement: null })\n    } else {\n      return this.alert(\n        \"danger\",\n        \"The transition cannot be safely deleted\"\n      )\n    }\n  }\n\n  onDelete() {\n    const element = this.state.curFSMElement;\n    if (element === null) {\n      this.alert(\n        \"danger\",\n        \"Cannot delete. There is no element selected.\"\n      )\n    } else {\n      const elementType = getFSMElementType(element)\n      switch (elementType) {\n        case FSMElementType.STATE:\n          this.deleteStatePb(element);\n          break;\n        case FSMElementType.TRANSITION:\n          this.deleteTransitionPb(element);\n          break;\n        default:\n          throw new Error(\"Unsupported Element Type: \" + elementType);\n      }\n    }\n  }\n\n\n  // diagram callbacks\n  onClickCell(elementView) {\n    const fsmElement = this.diagramRef.current.cellId2FSMElement[\n      elementView.model.id\n    ];\n    this.setState({\n      curFSMElement: fsmElement\n    });\n  }\n\n  addCallableFormDataToPb(callbleFormValue, addFunc, callablePbType, zoo) {\n    for (let idx = 0; idx < callbleFormValue.length; idx++) {\n      let callableValue = callbleFormValue[idx];\n      let callablePb = new callablePbType();\n      callablePb.setName(callableValue.name)\n      callablePb.setCallableName(callableValue.type);\n      // callable args\n      // need to filter out relevant arguments only\n      // since the form may contain irrelevant arguments for other callable type\n      // this is caused by user switching callable types\n      let args = {}\n      Object.keys(zoo[callableValue.type]).map((key) => {\n        args[key] = callableValue.args[key]\n      });\n      callablePb.setCallableArgs(JSON.stringify(args));\n      addFunc(callablePb);\n    }\n  }\n\n  createStatePb(formValue) {\n    let statePb = new fsmPb.State();\n    statePb.setName(formValue['name']);\n    // add processors\n    this.addCallableFormDataToPb(\n      formValue.callable,\n      statePb.addProcessors.bind(statePb), //bind is needed to pass context\n      fsmPb.Processor,\n      procZoo\n    )\n    return statePb;\n  }\n\n  findStatePb(stateName) {\n    let result = null;\n    const fsm = this.state.fsm;\n    fsm.getStatesList().map((state) => {\n      if (state.getName() == stateName) {\n        result = state;\n      }\n    })\n    return result;\n  }\n\n  createTransitionPb(formValue) {\n    let transitionPb = new fsmPb.Transition();\n    transitionPb.setName(formValue.name)\n    // to state\n    transitionPb.setNextState(formValue.to);\n    // instruction\n    let instPb = new fsmPb.Instruction();\n    instPb.setAudio(formValue.instruction.audio);\n    instPb.setImage(formValue.instruction.image);\n    instPb.setVideo(formValue.instruction.video);\n    transitionPb.setInstruction(instPb);\n    // add predicates\n    this.addCallableFormDataToPb(formValue.callable,\n      transitionPb.addPredicates.bind(transitionPb),\n      fsmPb.TransitionPredicate,\n      predZoo\n    )\n    return transitionPb;\n  }\n\n  onModalSave(type, formValue) {\n    const fsm = this.state.fsm;\n    switch (type) {\n      case FSMElementType.STATE:\n        const statePb = this.createStatePb(formValue);\n        fsm.addStates(statePb);\n        break;\n      case FSMElementType.TRANSITION:\n        const transitionPb = this.createTransitionPb(formValue);\n        // find from state\n        const fromStatePb = this.findStatePb(formValue.from);\n        fromStatePb.addTransitions(transitionPb);\n        break;\n      default:\n        throw new Error(\"Unsupported Element Type: \" + type + \". Failed to add a new element\")\n    }\n    this.setState({ fsm: fsm });\n    this.setState({ showNewElementModal: false })\n  }\n\n  onModalCancel() {\n    this.setState({ showNewElementModal: false })\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}